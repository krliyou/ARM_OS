; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\obj\main.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\kernel -I.\app -I.\drivers\UART -I.\board -I.\board\Exception\Systick -I.\board\Interrupt -I.\board\System_Init -I.\board\Exception\ErrorHandler -I.\board\Register -I..\..\..\..\lib\include -I.\board\Delay -I..\..\..\..\components\shell -I..\..\..\..\lib\include -I..\..\..\..\lib\list -I..\..\..\..\lib\ringbuffer -I.\drivers\LED -I..\..\..\..\board\arm\cortex-m3 -I..\..\..\..\..\ARM_OS -I.\RTE\_liyou -ID:\36Keil_5_MDK\install\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\36Keil_5_MDK\install\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DSTM32F10X_HD --omf_browse=.\obj\main.crf app\main.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;27     
;;;28     int main()
000000  b50e              PUSH     {r1-r3,lr}
;;;29     {
;;;30     	os_startup();
000002  f7fffffe          BL       os_startup
;;;31     
;;;32     	LED_Init();
000006  f7fffffe          BL       LED_Init
;;;33     
;;;34     	LED0_open();
00000a  2000              MOVS     r0,#0
00000c  4914              LDR      r1,|L1.96|
00000e  6008              STR      r0,[r1,#0]
;;;35     	LED1_open();
000010  4914              LDR      r1,|L1.100|
000012  f8c101a0          STR      r0,[r1,#0x1a0]
;;;36         
;;;37     	ly_task_init(&task1, task1_entry, LY_NULL, 
000016  2019              MOVS     r0,#0x19
000018  2103              MOVS     r1,#3
00001a  f44f7200          MOV      r2,#0x200
00001e  4b12              LDR      r3,|L1.104|
000020  e9cd2100          STRD     r2,r1,[sp,#0]
000024  9002              STR      r0,[sp,#8]
000026  2200              MOVS     r2,#0
000028  4910              LDR      r1,|L1.108|
00002a  4811              LDR      r0,|L1.112|
00002c  f7fffffe          BL       ly_task_init
;;;38     		&task1_stack[0], sizeof(task1_stack), 3, 25);
;;;39     	ly_task_startup(&task1);
000030  480f              LDR      r0,|L1.112|
000032  f7fffffe          BL       ly_task_startup
;;;40     
;;;41     
;;;42     	ly_task_init(&task2, task2_entry, LY_NULL, 
000036  2032              MOVS     r0,#0x32
000038  2103              MOVS     r1,#3
00003a  f44f7200          MOV      r2,#0x200
00003e  4b0d              LDR      r3,|L1.116|
000040  e9cd2100          STRD     r2,r1,[sp,#0]
000044  9002              STR      r0,[sp,#8]
000046  2200              MOVS     r2,#0
000048  490b              LDR      r1,|L1.120|
00004a  480c              LDR      r0,|L1.124|
00004c  f7fffffe          BL       ly_task_init
;;;43     		&task2_stack[0], sizeof(task2_stack), 3, 50);
;;;44     	ly_task_startup(&task2);
000050  480a              LDR      r0,|L1.124|
000052  f7fffffe          BL       ly_task_startup
;;;45     
;;;46     
;;;47     	system_scheduler_start();
000056  f7fffffe          BL       system_scheduler_start
;;;48     	
;;;49     	while(1);
00005a  bf00              NOP      
                  |L1.92|
00005c  e7fe              B        |L1.92|
;;;50     }
;;;51     
                          ENDP

00005e  0000              DCW      0x0000
                  |L1.96|
                          DCD      0x42210184
                  |L1.100|
                          DCD      0x42218000
                  |L1.104|
                          DCD      task1_stack
                  |L1.108|
                          DCD      task1_entry
                  |L1.112|
                          DCD      task1
                  |L1.116|
                          DCD      task2_stack
                  |L1.120|
                          DCD      task2_entry
                  |L1.124|
                          DCD      task2

                          AREA ||i.task1_entry||, CODE, READONLY, ALIGN=1

                  task1_entry PROC
;;;17     
;;;18     void task1_entry(void *parameter)
000000  4770              BX       lr
;;;19     {
;;;20     	
;;;21     }
;;;22     
                          ENDP


                          AREA ||i.task2_entry||, CODE, READONLY, ALIGN=1

                  task2_entry PROC
;;;22     
;;;23     void task2_entry(void *parameter)
000000  4770              BX       lr
;;;24     {
;;;25     }
;;;26     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  task1_stack
                          %        512
                  task2_stack
                          %        512
                  task1
                          %        80
                  task2
                          %        80

;*** Start embedded assembler ***

#line 1 "app\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_4139c287____REV16|
#line 464 ".\\board\\Interrupt\\Nvic_armcc.h"
|__asm___6_main_c_4139c287____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_4139c287____REVSH|
#line 479
|__asm___6_main_c_4139c287____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_4139c287____RRX|
#line 666
|__asm___6_main_c_4139c287____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
