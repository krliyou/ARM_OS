; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\obj\shell.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\shell.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\kernel -I.\app -I.\drivers\UART -I.\board -I.\board\Exception\Systick -I.\board\Interrupt -I.\board\System_Init -I.\board\Exception\ErrorHandler -I.\board\Register -I..\..\..\..\lib\include -I.\board\Delay -I..\..\..\..\components\shell -I..\..\..\..\lib\include -I..\..\..\..\lib\list -I..\..\..\..\lib\ringbuffer -I.\drivers\LED -I..\..\..\..\board\arm\cortex-m3 -I..\..\..\..\..\ARM_OS -I.\RTE\_liyou -ID:\36Keil_5_MDK\install\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\36Keil_5_MDK\install\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DSTM32F10X_HD --omf_browse=.\obj\shell.crf ..\..\..\..\components\shell\shell.c]
                          THUMB

                          AREA ||i.finsh_shell_entry||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  finsh_shell_entry PROC
;;;158    
;;;159    void finsh_shell_entry()
000000  f7fffffe          BL       finsh_system_init
;;;160    {
;;;161        int ch;
;;;162    
;;;163    	finsh_system_init();
;;;164    
;;;165    #ifdef FINSH_USING_AUTH    
;;;166    	finsh_wait_auth();
;;;167    #endif
;;;168    	
;;;169    	printf("%s", FINSH_PROMPT);
000004  a1d2              ADR      r1,|L1.848|
000006  a0d5              ADR      r0,|L1.860|
000008  f7fffffe          BL       __2printf
;;;170    
;;;171        while (1)
00000c  e19f              B        |L1.846|
                  |L1.14|
;;;172        {
;;;173            ch = (int)finsh_getchar();
00000e  f7fffffe          BL       get_str
000012  4604              MOV      r4,r0
;;;174    
;;;175            if (ch == 0x1b)
000014  2c1b              CMP      r4,#0x1b
000016  d103              BNE      |L1.32|
;;;176            {
;;;177                shell.stat = WAIT_SPEC_KEY;
000018  2001              MOVS     r0,#1
00001a  49d1              LDR      r1,|L1.864|
00001c  7008              STRB     r0,[r1,#0]
;;;178                continue;
00001e  e196              B        |L1.846|
                  |L1.32|
;;;179            }
;;;180            else if (shell.stat == WAIT_SPEC_KEY)
000020  48cf              LDR      r0,|L1.864|
000022  7800              LDRB     r0,[r0,#0]  ; shell
000024  2801              CMP      r0,#1
000026  d109              BNE      |L1.60|
;;;181            {
;;;182                if (ch == 0x5b)
000028  2c5b              CMP      r4,#0x5b
00002a  d103              BNE      |L1.52|
;;;183                {
;;;184                    shell.stat = WAIT_FUNC_KEY;
00002c  2002              MOVS     r0,#2
00002e  49cc              LDR      r1,|L1.864|
000030  7008              STRB     r0,[r1,#0]
;;;185                    continue;
000032  e18c              B        |L1.846|
                  |L1.52|
;;;186                }
;;;187    
;;;188                shell.stat = WAIT_NORMAL;
000034  2000              MOVS     r0,#0
000036  49ca              LDR      r1,|L1.864|
000038  7008              STRB     r0,[r1,#0]
                  |L1.58|
00003a  e08c              B        |L1.342|
                  |L1.60|
;;;189            }
;;;190            else if (shell.stat == WAIT_FUNC_KEY)
00003c  48c8              LDR      r0,|L1.864|
00003e  7800              LDRB     r0,[r0,#0]  ; shell
000040  2802              CMP      r0,#2
000042  d1fa              BNE      |L1.58|
;;;191            {
;;;192                shell.stat = WAIT_NORMAL;
000044  2000              MOVS     r0,#0
000046  49c6              LDR      r1,|L1.864|
000048  7008              STRB     r0,[r1,#0]
;;;193    
;;;194                if (ch == 0x41)  
00004a  2c41              CMP      r4,#0x41
00004c  d126              BNE      |L1.156|
;;;195                {
;;;196    #ifdef FINSH_USING_HISTORY
;;;197                     
;;;198                    if (shell.current_history > 0)
00004e  4608              MOV      r0,r1
000050  8840              LDRH     r0,[r0,#2]  ; shell
000052  2800              CMP      r0,#0
000054  dd04              BLE      |L1.96|
;;;199                        shell.current_history --;
000056  4608              MOV      r0,r1
000058  8840              LDRH     r0,[r0,#2]  ; shell
00005a  1e40              SUBS     r0,r0,#1
00005c  8048              STRH     r0,[r1,#2]
00005e  e003              B        |L1.104|
                  |L1.96|
;;;200                    else
;;;201                    {
;;;202                        shell.current_history = 0;
000060  2000              MOVS     r0,#0
000062  49bf              LDR      r1,|L1.864|
000064  8048              STRH     r0,[r1,#2]
;;;203                        continue;
000066  e172              B        |L1.846|
                  |L1.104|
;;;204                    }
;;;205    
;;;206                    ly_memcpy(shell.line, &shell.cmd_history[shell.current_history][0],
000068  48bd              LDR      r0,|L1.864|
00006a  8840              LDRH     r0,[r0,#2]  ; shell
00006c  eb000280          ADD      r2,r0,r0,LSL #2
000070  48bb              LDR      r0,|L1.864|
000072  1d80              ADDS     r0,r0,#6
000074  eb000182          ADD      r1,r0,r2,LSL #2
000078  2214              MOVS     r2,#0x14
00007a  3064              ADDS     r0,r0,#0x64
00007c  f7fffffe          BL       ly_memcpy
;;;207                           FINSH_CMD_SIZE);
;;;208                    shell.line_curpos = shell.line_position = (unsigned short)strlen(shell.line);
000080  48b7              LDR      r0,|L1.864|
000082  306a              ADDS     r0,r0,#0x6a
000084  f7fffffe          BL       strlen
000088  b280              UXTH     r0,r0
00008a  49b5              LDR      r1,|L1.864|
00008c  f8a10080          STRH     r0,[r1,#0x80]
000090  f8a10082          STRH     r0,[r1,#0x82]
;;;209                    shell_handle_history(&shell);
000094  4608              MOV      r0,r1
000096  f7fffffe          BL       shell_handle_history
;;;210    #endif
;;;211                    continue;
00009a  e158              B        |L1.846|
                  |L1.156|
;;;212                }
;;;213                else if (ch == 0x42) 
00009c  2c42              CMP      r4,#0x42
00009e  d12f              BNE      |L1.256|
;;;214                {
;;;215    #ifdef FINSH_USING_HISTORY
;;;216                    
;;;217                    if (shell.current_history < shell.history_count - 1)
0000a0  48af              LDR      r0,|L1.864|
0000a2  8841              LDRH     r1,[r0,#2]  ; shell
0000a4  8880              LDRH     r0,[r0,#4]  ; shell
0000a6  1e40              SUBS     r0,r0,#1
0000a8  4281              CMP      r1,r0
0000aa  da05              BGE      |L1.184|
;;;218                        shell.current_history ++;
0000ac  48ac              LDR      r0,|L1.864|
0000ae  8840              LDRH     r0,[r0,#2]  ; shell
0000b0  1c40              ADDS     r0,r0,#1
0000b2  49ab              LDR      r1,|L1.864|
0000b4  8048              STRH     r0,[r1,#2]
0000b6  e009              B        |L1.204|
                  |L1.184|
;;;219                    else
;;;220                    {
;;;221                         
;;;222                        if (shell.history_count != 0)
0000b8  48a9              LDR      r0,|L1.864|
0000ba  8880              LDRH     r0,[r0,#4]  ; shell
0000bc  b128              CBZ      r0,|L1.202|
;;;223                            shell.current_history = shell.history_count - 1;
0000be  48a8              LDR      r0,|L1.864|
0000c0  8880              LDRH     r0,[r0,#4]  ; shell
0000c2  1e40              SUBS     r0,r0,#1
0000c4  49a6              LDR      r1,|L1.864|
0000c6  8048              STRH     r0,[r1,#2]
0000c8  e000              B        |L1.204|
                  |L1.202|
;;;224                        else
;;;225                            continue;
0000ca  e140              B        |L1.846|
                  |L1.204|
;;;226                    }
;;;227    
;;;228                    ly_memcpy(shell.line, &shell.cmd_history[shell.current_history][0],
0000cc  48a4              LDR      r0,|L1.864|
0000ce  8840              LDRH     r0,[r0,#2]  ; shell
0000d0  eb000280          ADD      r2,r0,r0,LSL #2
0000d4  48a2              LDR      r0,|L1.864|
0000d6  1d80              ADDS     r0,r0,#6
0000d8  eb000182          ADD      r1,r0,r2,LSL #2
0000dc  2214              MOVS     r2,#0x14
0000de  3064              ADDS     r0,r0,#0x64
0000e0  f7fffffe          BL       ly_memcpy
;;;229                           FINSH_CMD_SIZE);
;;;230                    shell.line_curpos = shell.line_position = (unsigned short)strlen(shell.line);
0000e4  489e              LDR      r0,|L1.864|
0000e6  306a              ADDS     r0,r0,#0x6a
0000e8  f7fffffe          BL       strlen
0000ec  b280              UXTH     r0,r0
0000ee  499c              LDR      r1,|L1.864|
0000f0  f8a10080          STRH     r0,[r1,#0x80]
0000f4  f8a10082          STRH     r0,[r1,#0x82]
;;;231                    shell_handle_history(&shell);
0000f8  4608              MOV      r0,r1
0000fa  f7fffffe          BL       shell_handle_history
;;;232    #endif
;;;233                    continue;
0000fe  e126              B        |L1.846|
                  |L1.256|
;;;234                }
;;;235                else if (ch == 0x44) 
000100  2c44              CMP      r4,#0x44
000102  d10e              BNE      |L1.290|
;;;236                {
;;;237                    if (shell.line_curpos)
000104  4896              LDR      r0,|L1.864|
000106  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
00010a  b148              CBZ      r0,|L1.288|
;;;238                    {
;;;239    					printf("\b");
00010c  a095              ADR      r0,|L1.868|
00010e  f7fffffe          BL       __2printf
;;;240                        shell.line_curpos --;
000112  4893              LDR      r0,|L1.864|
000114  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
000118  1e40              SUBS     r0,r0,#1
00011a  4991              LDR      r1,|L1.864|
00011c  f8a10082          STRH     r0,[r1,#0x82]
                  |L1.288|
;;;241                    }
;;;242    
;;;243                    continue;
000120  e115              B        |L1.846|
                  |L1.290|
;;;244                }
;;;245                else if (ch == 0x43)  
000122  2c43              CMP      r4,#0x43
000124  d117              BNE      |L1.342|
;;;246                {
;;;247                    if (shell.line_curpos < shell.line_position)
000126  488e              LDR      r0,|L1.864|
000128  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
00012c  498c              LDR      r1,|L1.864|
00012e  f8b11080          LDRH     r1,[r1,#0x80]  ; shell
000132  4288              CMP      r0,r1
000134  da0e              BGE      |L1.340|
;;;248                    {
;;;249    					printf("%c", shell.line[shell.line_curpos]);
000136  488a              LDR      r0,|L1.864|
000138  f8b02082          LDRH     r2,[r0,#0x82]  ; shell
00013c  306a              ADDS     r0,r0,#0x6a
00013e  5c81              LDRB     r1,[r0,r2]
000140  a089              ADR      r0,|L1.872|
000142  f7fffffe          BL       __2printf
;;;250                        shell.line_curpos ++;
000146  4886              LDR      r0,|L1.864|
000148  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
00014c  1c40              ADDS     r0,r0,#1
00014e  4984              LDR      r1,|L1.864|
000150  f8a10082          STRH     r0,[r1,#0x82]
                  |L1.340|
;;;251                    }
;;;252    
;;;253                    continue;
000154  e0fb              B        |L1.846|
                  |L1.342|
;;;254                }
;;;255            }
;;;256    
;;;257            if (ch == '\0' || ch == 0xFF) 
000156  b10c              CBZ      r4,|L1.348|
000158  2cff              CMP      r4,#0xff
00015a  d100              BNE      |L1.350|
                  |L1.348|
;;;258    			continue;
00015c  e0f7              B        |L1.846|
                  |L1.350|
;;;259            
;;;260            else if (ch == '\t')
00015e  2c09              CMP      r4,#9
000160  d119              BNE      |L1.406|
;;;261            {
;;;262    #ifdef FINSH_AUTO_COMPLETE
;;;263                int i;
;;;264    
;;;265                for (i = 0; i < shell.line_curpos; i++)
000162  2500              MOVS     r5,#0
000164  e003              B        |L1.366|
                  |L1.358|
;;;266                    printf("\b");
000166  a07f              ADR      r0,|L1.868|
000168  f7fffffe          BL       __2printf
00016c  1c6d              ADDS     r5,r5,#1              ;265
                  |L1.366|
00016e  487c              LDR      r0,|L1.864|
000170  f8b00082          LDRH     r0,[r0,#0x82]         ;265  ; shell
000174  42a8              CMP      r0,r5                 ;265
000176  dcf6              BGT      |L1.358|
;;;267      
;;;268                shell_auto_complete(&shell.line[0]);
000178  4879              LDR      r0,|L1.864|
00017a  306a              ADDS     r0,r0,#0x6a
00017c  f7fffffe          BL       shell_auto_complete
;;;269                shell.line_curpos = shell.line_position = (unsigned short)strlen(shell.line);
000180  4877              LDR      r0,|L1.864|
000182  306a              ADDS     r0,r0,#0x6a
000184  f7fffffe          BL       strlen
000188  b280              UXTH     r0,r0
00018a  4975              LDR      r1,|L1.864|
00018c  f8a10080          STRH     r0,[r1,#0x80]
000190  f8a10082          STRH     r0,[r1,#0x82]
;;;270    #endif
;;;271                continue;
000194  e0db              B        |L1.846|
                  |L1.406|
;;;272            }
;;;273    
;;;274            else if (ch == 0x7f || ch == 0x08)
000196  2c7f              CMP      r4,#0x7f
000198  d001              BEQ      |L1.414|
00019a  2c08              CMP      r4,#8
00019c  d153              BNE      |L1.582|
                  |L1.414|
;;;275            {
;;;276                if (shell.line_curpos == 0)
00019e  4870              LDR      r0,|L1.864|
0001a0  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
0001a4  b900              CBNZ     r0,|L1.424|
;;;277                    continue;
0001a6  e0d2              B        |L1.846|
                  |L1.424|
;;;278    
;;;279                shell.line_position--;
0001a8  486d              LDR      r0,|L1.864|
0001aa  f8b00080          LDRH     r0,[r0,#0x80]  ; shell
0001ae  1e40              SUBS     r0,r0,#1
0001b0  496b              LDR      r1,|L1.864|
0001b2  f8a10080          STRH     r0,[r1,#0x80]
;;;280                shell.line_curpos--;
0001b6  4608              MOV      r0,r1
0001b8  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
0001bc  1e40              SUBS     r0,r0,#1
0001be  f8a10082          STRH     r0,[r1,#0x82]
;;;281    
;;;282                if (shell.line_position > shell.line_curpos)
0001c2  4608              MOV      r0,r1
0001c4  f8b00080          LDRH     r0,[r0,#0x80]  ; shell
0001c8  f8b11082          LDRH     r1,[r1,#0x82]  ; shell
0001cc  4288              CMP      r0,r1
0001ce  dd30              BLE      |L1.562|
;;;283                {
;;;284                    int i;
;;;285    
;;;286                    ly_memmove(&shell.line[shell.line_curpos],
0001d0  4b63              LDR      r3,|L1.864|
0001d2  f8b33080          LDRH     r3,[r3,#0x80]  ; shell
0001d6  4e62              LDR      r6,|L1.864|
0001d8  f8b66082          LDRH     r6,[r6,#0x82]  ; shell
0001dc  1b9a              SUBS     r2,r3,r6
0001de  4b60              LDR      r3,|L1.864|
0001e0  f8b33082          LDRH     r3,[r3,#0x82]  ; shell
0001e4  1c5b              ADDS     r3,r3,#1
0001e6  4e5e              LDR      r6,|L1.864|
0001e8  366a              ADDS     r6,r6,#0x6a
0001ea  1999              ADDS     r1,r3,r6
0001ec  4b5c              LDR      r3,|L1.864|
0001ee  f8b36082          LDRH     r6,[r3,#0x82]  ; shell
0001f2  336a              ADDS     r3,r3,#0x6a
0001f4  18f0              ADDS     r0,r6,r3
0001f6  f7fffffe          BL       ly_memmove
;;;287                               &shell.line[shell.line_curpos + 1],
;;;288                               shell.line_position - shell.line_curpos);
;;;289                    shell.line[shell.line_position] = 0;
0001fa  2100              MOVS     r1,#0
0001fc  4858              LDR      r0,|L1.864|
0001fe  f8b02080          LDRH     r2,[r0,#0x80]  ; shell
000202  306a              ADDS     r0,r0,#0x6a
000204  5481              STRB     r1,[r0,r2]
;;;290    
;;;291                    printf("\b%s  \b", &shell.line[shell.line_curpos]);
000206  386a              SUBS     r0,r0,#0x6a
000208  f8b02082          LDRH     r2,[r0,#0x82]  ; shell
00020c  306a              ADDS     r0,r0,#0x6a
00020e  1811              ADDS     r1,r2,r0
000210  a056              ADR      r0,|L1.876|
000212  f7fffffe          BL       __2printf
;;;292    
;;;293                    for (i = shell.line_curpos; i <= shell.line_position; i++)
000216  4852              LDR      r0,|L1.864|
000218  f8b05082          LDRH     r5,[r0,#0x82]  ; shell
00021c  e003              B        |L1.550|
                  |L1.542|
;;;294                        printf("\b");
00021e  a051              ADR      r0,|L1.868|
000220  f7fffffe          BL       __2printf
000224  1c6d              ADDS     r5,r5,#1              ;293
                  |L1.550|
000226  484e              LDR      r0,|L1.864|
000228  f8b00080          LDRH     r0,[r0,#0x80]         ;293  ; shell
00022c  42a8              CMP      r0,r5                 ;293
00022e  daf6              BGE      |L1.542|
;;;295                }
000230  e008              B        |L1.580|
                  |L1.562|
;;;296                else
;;;297                {
;;;298                    printf("\b \b");
000232  a050              ADR      r0,|L1.884|
000234  f7fffffe          BL       __2printf
;;;299                    shell.line[shell.line_position] = 0;
000238  2100              MOVS     r1,#0
00023a  4849              LDR      r0,|L1.864|
00023c  f8b02080          LDRH     r2,[r0,#0x80]  ; shell
000240  306a              ADDS     r0,r0,#0x6a
000242  5481              STRB     r1,[r0,r2]
                  |L1.580|
;;;300                }
;;;301    
;;;302                continue;
000244  e083              B        |L1.846|
                  |L1.582|
;;;303            }
;;;304    
;;;305            if (ch == '\r' || ch == '\n')
000246  2c0d              CMP      r4,#0xd
000248  d001              BEQ      |L1.590|
00024a  2c0a              CMP      r4,#0xa
00024c  d11c              BNE      |L1.648|
                  |L1.590|
;;;306            {
;;;307    #ifdef FINSH_USING_HISTORY
;;;308                shell_push_history(&shell);
00024e  4844              LDR      r0,|L1.864|
000250  f7fffffe          BL       shell_push_history
;;;309    #endif        
;;;310                printf("\r\n");
000254  a048              ADR      r0,|L1.888|
000256  f7fffffe          BL       __2printf
;;;311                msh_exec(shell.line, shell.line_position);
00025a  4841              LDR      r0,|L1.864|
00025c  f8b01080          LDRH     r1,[r0,#0x80]  ; shell
000260  306a              ADDS     r0,r0,#0x6a
000262  f7fffffe          BL       msh_exec
;;;312                printf("%s", FINSH_PROMPT);
000266  a13a              ADR      r1,|L1.848|
000268  a03c              ADR      r0,|L1.860|
00026a  f7fffffe          BL       __2printf
;;;313                ly_memset(shell.line, 0, sizeof(shell.line));
00026e  2215              MOVS     r2,#0x15
000270  2100              MOVS     r1,#0
000272  483b              LDR      r0,|L1.864|
000274  306a              ADDS     r0,r0,#0x6a
000276  f7fffffe          BL       ly_memset
;;;314                shell.line_curpos = shell.line_position = 0;
00027a  2000              MOVS     r0,#0
00027c  4938              LDR      r1,|L1.864|
00027e  f8a10080          STRH     r0,[r1,#0x80]
000282  f8a10082          STRH     r0,[r1,#0x82]
;;;315                continue;
000286  e062              B        |L1.846|
                  |L1.648|
;;;316            }
;;;317    
;;;318            if (shell.line_position >= FINSH_CMD_SIZE)
000288  4835              LDR      r0,|L1.864|
00028a  f8b00080          LDRH     r0,[r0,#0x80]  ; shell
00028e  2814              CMP      r0,#0x14
000290  db03              BLT      |L1.666|
;;;319                shell.line_position = 0;
000292  2000              MOVS     r0,#0
000294  4932              LDR      r1,|L1.864|
000296  f8a10080          STRH     r0,[r1,#0x80]
                  |L1.666|
;;;320    
;;;321            if (shell.line_curpos < shell.line_position)
00029a  4831              LDR      r0,|L1.864|
00029c  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
0002a0  492f              LDR      r1,|L1.864|
0002a2  f8b11080          LDRH     r1,[r1,#0x80]  ; shell
0002a6  4288              CMP      r0,r1
0002a8  da2f              BGE      |L1.778|
;;;322            {
;;;323                int i;
;;;324    
;;;325                ly_memmove(&shell.line[shell.line_curpos + 1],
0002aa  4b2d              LDR      r3,|L1.864|
0002ac  f8b33080          LDRH     r3,[r3,#0x80]  ; shell
0002b0  4e2b              LDR      r6,|L1.864|
0002b2  f8b66082          LDRH     r6,[r6,#0x82]  ; shell
0002b6  1b9a              SUBS     r2,r3,r6
0002b8  4b29              LDR      r3,|L1.864|
0002ba  f8b36082          LDRH     r6,[r3,#0x82]  ; shell
0002be  336a              ADDS     r3,r3,#0x6a
0002c0  18f1              ADDS     r1,r6,r3
0002c2  3b6a              SUBS     r3,r3,#0x6a
0002c4  f8b33082          LDRH     r3,[r3,#0x82]  ; shell
0002c8  1c5b              ADDS     r3,r3,#1
0002ca  4e25              LDR      r6,|L1.864|
0002cc  366a              ADDS     r6,r6,#0x6a
0002ce  1998              ADDS     r0,r3,r6
0002d0  f7fffffe          BL       ly_memmove
;;;326                           &shell.line[shell.line_curpos],
;;;327                           shell.line_position - shell.line_curpos);
;;;328                shell.line[shell.line_curpos] = ch;
0002d4  4822              LDR      r0,|L1.864|
0002d6  f8b02082          LDRH     r2,[r0,#0x82]  ; shell
0002da  306a              ADDS     r0,r0,#0x6a
0002dc  5484              STRB     r4,[r0,r2]
;;;329                printf("%s", &shell.line[shell.line_curpos]);
0002de  386a              SUBS     r0,r0,#0x6a
0002e0  f8b02082          LDRH     r2,[r0,#0x82]  ; shell
0002e4  306a              ADDS     r0,r0,#0x6a
0002e6  1811              ADDS     r1,r2,r0
0002e8  a01c              ADR      r0,|L1.860|
0002ea  f7fffffe          BL       __2printf
;;;330    
;;;331                for (i = shell.line_curpos; i < shell.line_position; i++)
0002ee  481c              LDR      r0,|L1.864|
0002f0  f8b05082          LDRH     r5,[r0,#0x82]  ; shell
0002f4  e003              B        |L1.766|
                  |L1.758|
;;;332                    printf("\b");
0002f6  a01b              ADR      r0,|L1.868|
0002f8  f7fffffe          BL       __2printf
0002fc  1c6d              ADDS     r5,r5,#1              ;331
                  |L1.766|
0002fe  4818              LDR      r0,|L1.864|
000300  f8b00080          LDRH     r0,[r0,#0x80]         ;331  ; shell
000304  42a8              CMP      r0,r5                 ;331
000306  dcf6              BGT      |L1.758|
;;;333            }
000308  e008              B        |L1.796|
                  |L1.778|
;;;334            else
;;;335            {
;;;336                shell.line[shell.line_position] = ch;
00030a  4815              LDR      r0,|L1.864|
00030c  f8b02080          LDRH     r2,[r0,#0x80]  ; shell
000310  306a              ADDS     r0,r0,#0x6a
000312  5484              STRB     r4,[r0,r2]
;;;337                printf("%c", ch);
000314  4621              MOV      r1,r4
000316  a014              ADR      r0,|L1.872|
000318  f7fffffe          BL       __2printf
                  |L1.796|
;;;338            }
;;;339    
;;;340            ch = 0;
00031c  2400              MOVS     r4,#0
;;;341            shell.line_position ++;
00031e  4810              LDR      r0,|L1.864|
000320  f8b00080          LDRH     r0,[r0,#0x80]  ; shell
000324  1c40              ADDS     r0,r0,#1
000326  490e              LDR      r1,|L1.864|
000328  f8a10080          STRH     r0,[r1,#0x80]
;;;342            shell.line_curpos++;
00032c  4608              MOV      r0,r1
00032e  f8b00082          LDRH     r0,[r0,#0x82]  ; shell
000332  1c40              ADDS     r0,r0,#1
000334  f8a10082          STRH     r0,[r1,#0x82]
;;;343            if (shell.line_position >= FINSH_CMD_SIZE)
000338  4608              MOV      r0,r1
00033a  f8b00080          LDRH     r0,[r0,#0x80]  ; shell
00033e  2814              CMP      r0,#0x14
000340  db04              BLT      |L1.844|
;;;344            {
;;;345                shell.line_position = 0;
000342  2000              MOVS     r0,#0
000344  f8a10080          STRH     r0,[r1,#0x80]
;;;346                shell.line_curpos = 0;
000348  f8a10082          STRH     r0,[r1,#0x82]
                  |L1.844|
00034c  bf00              NOP                            ;178
                  |L1.846|
00034e  e65e              B        |L1.14|
;;;347            }
;;;348        } 
;;;349    }
;;;350    
                          ENDP

                  |L1.848|
000350  4c595f4f          DCB      "LY_OYA />",0
000354  5941202f
000358  3e00    
00035a  00                DCB      0
00035b  00                DCB      0
                  |L1.860|
00035c  257300            DCB      "%s",0
00035f  00                DCB      0
                  |L1.864|
                          DCD      shell
                  |L1.868|
000364  0800              DCB      "\b",0
000366  00                DCB      0
000367  00                DCB      0
                  |L1.872|
000368  256300            DCB      "%c",0
00036b  00                DCB      0
                  |L1.876|
00036c  08257320          DCB      "\b%s  \b",0
000370  200800  
000373  00                DCB      0
                  |L1.884|
000374  08200800          DCB      "\b \b",0
                  |L1.888|
000378  0d0a00            DCB      "\r\n",0
00037b  00                DCB      0

                          AREA ||i.finsh_system_init||, CODE, READONLY, ALIGN=2

                  finsh_system_init PROC
;;;350    
;;;351    int finsh_system_init(void)
000000  4803              LDR      r0,|L2.16|
;;;352    {	
;;;353    	#if defined(__CC_ARM) || defined(__CLANG_ARM)   
;;;354    		extern const int FSymTab$$Base;
;;;355    		extern const int FSymTab$$Limit;
;;;356    		_syscall_table_begin = (struct finsh_syscall*) &FSymTab$$Base;
000002  4904              LDR      r1,|L2.20|
000004  6008              STR      r0,[r1,#0]  ; _syscall_table_begin
;;;357    		_syscall_table_end = (struct finsh_syscall*) &FSymTab$$Limit;
000006  4804              LDR      r0,|L2.24|
000008  4904              LDR      r1,|L2.28|
00000a  6008              STR      r0,[r1,#0]  ; _syscall_table_end
;;;358    	#endif
;;;359    	
;;;360        return 0;
00000c  2000              MOVS     r0,#0
;;;361    }
00000e  4770              BX       lr
;;;362    
                          ENDP

                  |L2.16|
                          DCD      ||FSymTab$$Base||
                  |L2.20|
                          DCD      _syscall_table_begin
                  |L2.24|
                          DCD      ||FSymTab$$Limit||
                  |L2.28|
                          DCD      _syscall_table_end

                          AREA ||i.shell_auto_complete||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  shell_auto_complete PROC
;;;90     #ifdef FINSH_AUTO_COMPLETE
;;;91     static void shell_auto_complete(char *prefix)
000000  b510              PUSH     {r4,lr}
;;;92     {
000002  4604              MOV      r4,r0
;;;93         printf("\r\n");
000004  a005              ADR      r0,|L3.28|
000006  f7fffffe          BL       __2printf
;;;94     	msh_auto_complete(prefix);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       msh_auto_complete
;;;95         printf("%s%s", FINSH_PROMPT, prefix);
000010  4622              MOV      r2,r4
000012  a103              ADR      r1,|L3.32|
000014  a005              ADR      r0,|L3.44|
000016  f7fffffe          BL       __2printf
;;;96     }
00001a  bd10              POP      {r4,pc}
;;;97     #endif
                          ENDP

                  |L3.28|
00001c  0d0a00            DCB      "\r\n",0
00001f  00                DCB      0
                  |L3.32|
000020  4c595f4f          DCB      "LY_OYA />",0
000024  5941202f
000028  3e00    
00002a  00                DCB      0
00002b  00                DCB      0
                  |L3.44|
00002c  25732573          DCB      "%s%s",0
000030  00      
000031  00                DCB      0
000032  00                DCB      0
000033  00                DCB      0

                          AREA ||i.shell_handle_history||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  shell_handle_history PROC
;;;99     #ifdef FINSH_USING_HISTORY
;;;100    static int shell_handle_history(struct finsh_shell *shell)
000000  b510              PUSH     {r4,lr}
;;;101    {
000002  4604              MOV      r4,r0
;;;102    #if defined(_WIN32)
;;;103        int i;
;;;104        printf("\r");
;;;105    
;;;106        for (i = 0; i <= 60; i++)
;;;107            putchar(' ');
;;;108    	printf("\r");
;;;109    #else
;;;110        printf("\033[2K\r");
000004  a005              ADR      r0,|L4.28|
000006  f7fffffe          BL       __2printf
;;;111    #endif
;;;112        
;;;113    	printf("%s%s", FINSH_PROMPT, shell->line);
00000a  f104026a          ADD      r2,r4,#0x6a
00000e  a105              ADR      r1,|L4.36|
000010  a007              ADR      r0,|L4.48|
000012  f7fffffe          BL       __2printf
;;;114    
;;;115        return 0;
000016  2000              MOVS     r0,#0
;;;116    }
000018  bd10              POP      {r4,pc}
;;;117    
                          ENDP

00001a  0000              DCW      0x0000
                  |L4.28|
00001c  1b5b324b          DCB      27,"[2K\r",0
000020  0d00    
000022  00                DCB      0
000023  00                DCB      0
                  |L4.36|
000024  4c595f4f          DCB      "LY_OYA />",0
000028  5941202f
00002c  3e00    
00002e  00                DCB      0
00002f  00                DCB      0
                  |L4.48|
000030  25732573          DCB      "%s%s",0
000034  00      
000035  00                DCB      0
000036  00                DCB      0
000037  00                DCB      0

                          AREA ||i.shell_push_history||, CODE, READONLY, ALIGN=1

                  shell_push_history PROC
;;;117    
;;;118    static void shell_push_history(struct finsh_shell *shell)
000000  b570              PUSH     {r4-r6,lr}
;;;119    {
000002  4604              MOV      r4,r0
;;;120        if (shell->line_position != 0)
000004  f8b40080          LDRH     r0,[r4,#0x80]
000008  2800              CMP      r0,#0
00000a  d05b              BEQ      |L5.196|
;;;121        {
;;;122            if (shell->history_count >= FINSH_HISTORY_LINES)
00000c  88a0              LDRH     r0,[r4,#4]
00000e  2805              CMP      r0,#5
000010  db30              BLT      |L5.116|
;;;123            {
;;;124                if (ly_memcmp(&shell->cmd_history[FINSH_HISTORY_LINES - 1], 	\
000012  2214              MOVS     r2,#0x14
000014  f104016a          ADD      r1,r4,#0x6a
000018  f1040056          ADD      r0,r4,#0x56
00001c  f7fffffe          BL       ly_memcmp
000020  2800              CMP      r0,#0
000022  d04f              BEQ      |L5.196|
;;;125    								shell->line, FINSH_CMD_SIZE))
;;;126                {
;;;127                    int index;
;;;128                    for (index = 0; index < FINSH_HISTORY_LINES - 1; index ++)
000024  2500              MOVS     r5,#0
000026  e00d              B        |L5.68|
                  |L5.40|
;;;129                    {
;;;130                        ly_memcpy(&shell->cmd_history[index][0],
000028  1c6a              ADDS     r2,r5,#1
00002a  eb020382          ADD      r3,r2,r2,LSL #2
00002e  1da2              ADDS     r2,r4,#6
000030  eb020183          ADD      r1,r2,r3,LSL #2
000034  eb050385          ADD      r3,r5,r5,LSL #2
000038  eb020083          ADD      r0,r2,r3,LSL #2
00003c  2214              MOVS     r2,#0x14
00003e  f7fffffe          BL       ly_memcpy
000042  1c6d              ADDS     r5,r5,#1              ;128
                  |L5.68|
000044  2d04              CMP      r5,#4                 ;128
000046  dbef              BLT      |L5.40|
;;;131                               &shell->cmd_history[index + 1][0], FINSH_CMD_SIZE);
;;;132                    }
;;;133                    ly_memset(&shell->cmd_history[index][0], 0, FINSH_CMD_SIZE);
000048  eb050285          ADD      r2,r5,r5,LSL #2
00004c  1da1              ADDS     r1,r4,#6
00004e  eb010082          ADD      r0,r1,r2,LSL #2
000052  2214              MOVS     r2,#0x14
000054  2100              MOVS     r1,#0
000056  f7fffffe          BL       ly_memset
;;;134                    ly_memcpy(&shell->cmd_history[index][0], shell->line, shell->line_position);
00005a  f8b42080          LDRH     r2,[r4,#0x80]
00005e  eb050385          ADD      r3,r5,r5,LSL #2
000062  1da1              ADDS     r1,r4,#6
000064  eb010083          ADD      r0,r1,r3,LSL #2
000068  3164              ADDS     r1,r1,#0x64
00006a  f7fffffe          BL       ly_memcpy
;;;135    
;;;136                    shell->history_count = FINSH_HISTORY_LINES;
00006e  2005              MOVS     r0,#5
000070  80a0              STRH     r0,[r4,#4]
;;;137                }
000072  e027              B        |L5.196|
                  |L5.116|
;;;138            }
;;;139            else
;;;140            {
;;;141                if (shell->history_count == 0 || 	\
000074  88a0              LDRH     r0,[r4,#4]
000076  b158              CBZ      r0,|L5.144|
;;;142    				ly_memcmp(&shell->cmd_history[shell->history_count - 1], 	\
000078  88a1              LDRH     r1,[r4,#4]
00007a  1e49              SUBS     r1,r1,#1
00007c  eb010281          ADD      r2,r1,r1,LSL #2
000080  1da1              ADDS     r1,r4,#6
000082  eb010082          ADD      r0,r1,r2,LSL #2
000086  2214              MOVS     r2,#0x14
000088  3164              ADDS     r1,r1,#0x64
00008a  f7fffffe          BL       ly_memcmp
00008e  b1c8              CBZ      r0,|L5.196|
                  |L5.144|
;;;143    				shell->line, FINSH_CMD_SIZE))
;;;144                {
;;;145                    shell->current_history = shell->history_count;
000090  88a0              LDRH     r0,[r4,#4]
000092  8060              STRH     r0,[r4,#2]
;;;146    
;;;147                    ly_memset(&shell->cmd_history	\
000094  88a1              LDRH     r1,[r4,#4]
000096  eb010281          ADD      r2,r1,r1,LSL #2
00009a  1da1              ADDS     r1,r4,#6
00009c  eb010082          ADD      r0,r1,r2,LSL #2
0000a0  2214              MOVS     r2,#0x14
0000a2  2100              MOVS     r1,#0
0000a4  f7fffffe          BL       ly_memset
;;;148    				[shell->history_count][0], 0, FINSH_CMD_SIZE);
;;;149                    ly_memcpy(&shell->cmd_history[shell->history_count][0], \
0000a8  f8b42080          LDRH     r2,[r4,#0x80]
0000ac  88a1              LDRH     r1,[r4,#4]
0000ae  eb010381          ADD      r3,r1,r1,LSL #2
0000b2  1da1              ADDS     r1,r4,#6
0000b4  eb010083          ADD      r0,r1,r3,LSL #2
0000b8  3164              ADDS     r1,r1,#0x64
0000ba  f7fffffe          BL       ly_memcpy
;;;150    				shell->line, shell->line_position);
;;;151                    shell->history_count ++;
0000be  88a0              LDRH     r0,[r4,#4]
0000c0  1c40              ADDS     r0,r0,#1
0000c2  80a0              STRH     r0,[r4,#4]
                  |L5.196|
;;;152                }
;;;153            }
;;;154        }
;;;155    		shell->current_history = shell->history_count;
0000c4  88a0              LDRH     r0,[r4,#4]
0000c6  8060              STRH     r0,[r4,#2]
;;;156    }
0000c8  bd70              POP      {r4-r6,pc}
;;;157    #endif
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  shell
                          %        132

                          AREA ||.data||, DATA, ALIGN=2

                  _syscall_table_begin
                          DCD      0x00000000
                  _syscall_table_end
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\components\\shell\\shell.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_shell_c_f1952871____REV16|
#line 464 ".\\board\\Interrupt\\Nvic_armcc.h"
|__asm___7_shell_c_f1952871____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_shell_c_f1952871____REVSH|
#line 479
|__asm___7_shell_c_f1952871____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_shell_c_f1952871____RRX|
#line 666
|__asm___7_shell_c_f1952871____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
