; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\obj\fault_handler_1.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\fault_handler_1.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\kernel -I.\app -I.\drivers\UART -I.\board -I.\board\Exception\Systick -I.\board\Interrupt -I.\board\System_Init -I.\board\Exception\ErrorHandler -I.\board\Register -I..\..\..\..\lib\include -I..\..\..\..\..\LIYOU_ARM -I..\..\..\..\components\arm_backtrace -I.\board\Delay -I..\..\..\..\components\shell -I..\..\..\..\lib\include -I..\..\..\..\lib\list -I..\..\..\..\lib\ringbuffer -I.\drivers\LED -I..\..\..\..\board\arm\cortex-m3 -I.\RTE\_liyou -ID:\36Keil_5_MDK\install\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\36Keil_5_MDK\install\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DSTM32F10X_HD --omf_browse=.\obj\fault_handler_1.crf board\Exception\ErrorHandler\fault_handler.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;23     
;;;24     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;25     {
;;;26     	while (1)
000002  e7fe              B        |L1.2|
;;;27     	{
;;;28     		
;;;29     	}
;;;30     }
;;;31     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;77     
;;;78     void DebugMon_Handler(void)
000000  4770              BX       lr
;;;79     {
;;;80     
;;;81     }
;;;82     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;15     
;;;16     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L3.2|
;;;17     {
;;;18     	while (1)
000002  e7fe              B        |L3.2|
;;;19     	{
;;;20     		
;;;21     	}
;;;22     }
;;;23     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;10     
;;;11     void NMI_Handler(void)
000000  4770              BX       lr
;;;12     {
;;;13     	
;;;14     }
;;;15     
                          ENDP


                          AREA ||i.PPP_IRQHandler||, CODE, READONLY, ALIGN=1

                  PPP_IRQHandler PROC
;;;83     
;;;84     void PPP_IRQHandler(void)
000000  4770              BX       lr
;;;85     {
;;;86     
;;;87     }
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;72     
;;;73     void SVC_Handler(void)
000000  4770              BX       lr
;;;74     {
;;;75     
;;;76     }
;;;77     
                          ENDP


                          AREA ||i.ly_hw_hard_fault_exception||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  ly_hw_hard_fault_exception PROC
;;;31     
;;;32     void ly_hw_hard_fault_exception(struct exception_info * exception_info)
000000  4604              MOV      r4,r0
;;;33     {
;;;34     	unsigned int *app_sp;
;;;35     	
;;;36     	int i;
;;;37     	app_sp = (unsigned int *)(exception_info + 1);  /* context + 16*4 */
000002  f1040644          ADD      r6,r4,#0x44
;;;38         
;;;39         printf("psr: 0x%08x\r\n", exception_info->psr);
000006  a032              ADR      r0,|L7.208|
000008  6c21              LDR      r1,[r4,#0x40]
00000a  f7fffffe          BL       __2printf
;;;40         printf("r00: 0x%08x\r\n", exception_info->r0);
00000e  a034              ADR      r0,|L7.224|
000010  6a61              LDR      r1,[r4,#0x24]
000012  f7fffffe          BL       __2printf
;;;41         printf("r01: 0x%08x\r\n", exception_info->r1);
000016  a036              ADR      r0,|L7.240|
000018  6aa1              LDR      r1,[r4,#0x28]
00001a  f7fffffe          BL       __2printf
;;;42         printf("r02: 0x%08x\r\n", exception_info->r2);
00001e  a038              ADR      r0,|L7.256|
000020  6ae1              LDR      r1,[r4,#0x2c]
000022  f7fffffe          BL       __2printf
;;;43         printf("r03: 0x%08x\r\n", exception_info->r3);
000026  a03a              ADR      r0,|L7.272|
000028  6b21              LDR      r1,[r4,#0x30]
00002a  f7fffffe          BL       __2printf
;;;44         printf("r04: 0x%08x\r\n", exception_info->r4);
00002e  a03c              ADR      r0,|L7.288|
000030  6861              LDR      r1,[r4,#4]
000032  f7fffffe          BL       __2printf
;;;45         printf("r05: 0x%08x\r\n", exception_info->r5);
000036  a03e              ADR      r0,|L7.304|
000038  68a1              LDR      r1,[r4,#8]
00003a  f7fffffe          BL       __2printf
;;;46         printf("r06: 0x%08x\r\n", exception_info->r6);
00003e  a040              ADR      r0,|L7.320|
000040  68e1              LDR      r1,[r4,#0xc]
000042  f7fffffe          BL       __2printf
;;;47         printf("r07: 0x%08x\r\n", exception_info->r7);
000046  a042              ADR      r0,|L7.336|
000048  6921              LDR      r1,[r4,#0x10]
00004a  f7fffffe          BL       __2printf
;;;48         printf("r08: 0x%08x\r\n", exception_info->r8);
00004e  a044              ADR      r0,|L7.352|
000050  6961              LDR      r1,[r4,#0x14]
000052  f7fffffe          BL       __2printf
;;;49         printf("r09: 0x%08x\r\n", exception_info->r9);
000056  a046              ADR      r0,|L7.368|
000058  69a1              LDR      r1,[r4,#0x18]
00005a  f7fffffe          BL       __2printf
;;;50         printf("r10: 0x%08x\r\n", exception_info->r10);
00005e  a048              ADR      r0,|L7.384|
000060  69e1              LDR      r1,[r4,#0x1c]
000062  f7fffffe          BL       __2printf
;;;51         printf("r11: 0x%08x\r\n", exception_info->r11);
000066  a04a              ADR      r0,|L7.400|
000068  6a21              LDR      r1,[r4,#0x20]
00006a  f7fffffe          BL       __2printf
;;;52     	printf("r12: 0x%08x\r\n", exception_info->r12);
00006e  a04c              ADR      r0,|L7.416|
000070  6b61              LDR      r1,[r4,#0x34]
000072  f7fffffe          BL       __2printf
;;;53     	printf(" lr: 0x%08x\r\n", exception_info->lr);
000076  a04e              ADR      r0,|L7.432|
000078  6ba1              LDR      r1,[r4,#0x38]
00007a  f7fffffe          BL       __2printf
;;;54         printf(" pc: 0x%08x\r\n", exception_info->pc);
00007e  a050              ADR      r0,|L7.448|
000080  6be1              LDR      r1,[r4,#0x3c]
000082  f7fffffe          BL       __2printf
;;;55         printf(" exc_return: 0x%08x\r\n", exception_info->exc_return);
000086  a052              ADR      r0,|L7.464|
000088  6821              LDR      r1,[r4,#0]
00008a  f7fffffe          BL       __2printf
;;;56     
;;;57     	printf("\r\n");
00008e  a056              ADR      r0,|L7.488|
000090  f7fffffe          BL       __2printf
;;;58     	
;;;59     	printf("stacks is : \r\n");
000094  a055              ADR      r0,|L7.492|
000096  f7fffffe          BL       __2printf
;;;60     	i = 0;
00009a  2500              MOVS     r5,#0
;;;61     	for (i = 0; i < 1024; i++)
00009c  bf00              NOP      
00009e  e00f              B        |L7.192|
                  |L7.160|
;;;62     	{
;;;63     		printf("%08x ", *app_sp);
0000a0  a056              ADR      r0,|L7.508|
0000a2  6831              LDR      r1,[r6,#0]
0000a4  f7fffffe          BL       __2printf
;;;64     		app_sp++;
0000a8  1d36              ADDS     r6,r6,#4
;;;65     		if (i % 16 == 0)
0000aa  17e9              ASRS     r1,r5,#31
0000ac  eb057111          ADD      r1,r5,r1,LSR #28
0000b0  1109              ASRS     r1,r1,#4
0000b2  eba51101          SUB      r1,r5,r1,LSL #4
0000b6  b911              CBNZ     r1,|L7.190|
;;;66     			printf("\r\n");		
0000b8  a04b              ADR      r0,|L7.488|
0000ba  f7fffffe          BL       __2printf
                  |L7.190|
0000be  1c6d              ADDS     r5,r5,#1              ;61
                  |L7.192|
0000c0  f5b56f80          CMP      r5,#0x400             ;61
0000c4  dbec              BLT      |L7.160|
;;;67     	}
;;;68     	printf("\r\n");
0000c6  a048              ADR      r0,|L7.488|
0000c8  f7fffffe          BL       __2printf
;;;69     
;;;70     	while (1);
0000cc  bf00              NOP      
                  |L7.206|
0000ce  e7fe              B        |L7.206|
;;;71     }
;;;72     
                          ENDP

                  |L7.208|
0000d0  7073723a          DCB      "psr: 0x%08x\r\n",0
0000d4  20307825
0000d8  3038780d
0000dc  0a00    
0000de  00                DCB      0
0000df  00                DCB      0
                  |L7.224|
0000e0  7230303a          DCB      "r00: 0x%08x\r\n",0
0000e4  20307825
0000e8  3038780d
0000ec  0a00    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L7.240|
0000f0  7230313a          DCB      "r01: 0x%08x\r\n",0
0000f4  20307825
0000f8  3038780d
0000fc  0a00    
0000fe  00                DCB      0
0000ff  00                DCB      0
                  |L7.256|
000100  7230323a          DCB      "r02: 0x%08x\r\n",0
000104  20307825
000108  3038780d
00010c  0a00    
00010e  00                DCB      0
00010f  00                DCB      0
                  |L7.272|
000110  7230333a          DCB      "r03: 0x%08x\r\n",0
000114  20307825
000118  3038780d
00011c  0a00    
00011e  00                DCB      0
00011f  00                DCB      0
                  |L7.288|
000120  7230343a          DCB      "r04: 0x%08x\r\n",0
000124  20307825
000128  3038780d
00012c  0a00    
00012e  00                DCB      0
00012f  00                DCB      0
                  |L7.304|
000130  7230353a          DCB      "r05: 0x%08x\r\n",0
000134  20307825
000138  3038780d
00013c  0a00    
00013e  00                DCB      0
00013f  00                DCB      0
                  |L7.320|
000140  7230363a          DCB      "r06: 0x%08x\r\n",0
000144  20307825
000148  3038780d
00014c  0a00    
00014e  00                DCB      0
00014f  00                DCB      0
                  |L7.336|
000150  7230373a          DCB      "r07: 0x%08x\r\n",0
000154  20307825
000158  3038780d
00015c  0a00    
00015e  00                DCB      0
00015f  00                DCB      0
                  |L7.352|
000160  7230383a          DCB      "r08: 0x%08x\r\n",0
000164  20307825
000168  3038780d
00016c  0a00    
00016e  00                DCB      0
00016f  00                DCB      0
                  |L7.368|
000170  7230393a          DCB      "r09: 0x%08x\r\n",0
000174  20307825
000178  3038780d
00017c  0a00    
00017e  00                DCB      0
00017f  00                DCB      0
                  |L7.384|
000180  7231303a          DCB      "r10: 0x%08x\r\n",0
000184  20307825
000188  3038780d
00018c  0a00    
00018e  00                DCB      0
00018f  00                DCB      0
                  |L7.400|
000190  7231313a          DCB      "r11: 0x%08x\r\n",0
000194  20307825
000198  3038780d
00019c  0a00    
00019e  00                DCB      0
00019f  00                DCB      0
                  |L7.416|
0001a0  7231323a          DCB      "r12: 0x%08x\r\n",0
0001a4  20307825
0001a8  3038780d
0001ac  0a00    
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L7.432|
0001b0  206c723a          DCB      " lr: 0x%08x\r\n",0
0001b4  20307825
0001b8  3038780d
0001bc  0a00    
0001be  00                DCB      0
0001bf  00                DCB      0
                  |L7.448|
0001c0  2070633a          DCB      " pc: 0x%08x\r\n",0
0001c4  20307825
0001c8  3038780d
0001cc  0a00    
0001ce  00                DCB      0
0001cf  00                DCB      0
                  |L7.464|
0001d0  20657863          DCB      " exc_return: 0x%08x\r\n",0
0001d4  5f726574
0001d8  75726e3a
0001dc  20307825
0001e0  3038780d
0001e4  0a00    
0001e6  00                DCB      0
0001e7  00                DCB      0
                  |L7.488|
0001e8  0d0a00            DCB      "\r\n",0
0001eb  00                DCB      0
                  |L7.492|
0001ec  73746163          DCB      "stacks is : \r\n",0
0001f0  6b732069
0001f4  73203a20
0001f8  0d0a00  
0001fb  00                DCB      0
                  |L7.508|
0001fc  25303878          DCB      "%08x ",0
000200  2000    
000202  00                DCB      0
000203  00                DCB      0
