; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\obj\usart_tranfer.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\usart_tranfer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\kernel -I.\app -I.\drivers\UART -I.\board -I.\board\Exception\Systick -I.\board\Interrupt -I.\board\System_Init -I.\board\Exception\ErrorHandler -I.\board\Register -I..\..\..\..\lib\include -I.\board\Delay -I..\..\..\..\components\shell -I..\..\..\..\lib\include -I..\..\..\..\lib\list -I..\..\..\..\lib\ringbuffer -I.\drivers\LED -I..\..\..\..\board\arm\cortex-m3 -I..\..\..\..\..\ARM_OS -I.\RTE\_liyou -ID:\36Keil_5_MDK\install\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\36Keil_5_MDK\install\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DSTM32F10X_HD --omf_browse=.\obj\usart_tranfer.crf drivers\UART\usart_tranfer.c]
                          THUMB

                          AREA ||i.USART1_IRQHandler||, CODE, READONLY, ALIGN=2

                  USART1_IRQHandler PROC
;;;47     
;;;48     void USART1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;49     {		
;;;50     	if(USART1->SR & (1<<5))
000002  4806              LDR      r0,|L1.28|
000004  6800              LDR      r0,[r0,#0]
000006  f0000020          AND      r0,r0,#0x20
00000a  b128              CBZ      r0,|L1.24|
;;;51     	{
;;;52     		kfifo_in(&pkfifo, &(USART1->DR), 1);
00000c  2201              MOVS     r2,#1
00000e  4903              LDR      r1,|L1.28|
000010  1d09              ADDS     r1,r1,#4
000012  4803              LDR      r0,|L1.32|
000014  f7fffffe          BL       kfifo_in
                  |L1.24|
;;;53     	}
;;;54     }
000018  bd10              POP      {r4,pc}
;;;55     
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x40013800
                  |L1.32|
                          DCD      pkfifo

                          AREA ||i.fputc||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;55     
;;;56     int fputc(int ch, FILE *f)
000000  bf00              NOP      
                  |L2.2|
;;;57     {      
;;;58     	while((USART1->SR&0X40)==0);				
000002  4a05              LDR      r2,|L2.24|
000004  6812              LDR      r2,[r2,#0]
000006  f0020240          AND      r2,r2,#0x40
00000a  2a00              CMP      r2,#0
00000c  d0f9              BEQ      |L2.2|
;;;59     	USART1->DR = (unsigned char) ch;      	
00000e  b2c2              UXTB     r2,r0
000010  4b01              LDR      r3,|L2.24|
000012  1d1b              ADDS     r3,r3,#4
000014  601a              STR      r2,[r3,#0]
;;;60     	return ch;
;;;61     }
000016  4770              BX       lr
;;;62     
                          ENDP

                  |L2.24|
                          DCD      0x40013800

                          AREA ||i.get_str||, CODE, READONLY, ALIGN=2

                  get_str PROC
;;;62     
;;;63     unsigned char get_str(void)
000000  b508              PUSH     {r3,lr}
;;;64     {
;;;65     	unsigned char s;
;;;66     	while (0 == kfifo_out(&pkfifo, &s, 1));
000002  bf00              NOP      
                  |L3.4|
000004  2201              MOVS     r2,#1
000006  4669              MOV      r1,sp
000008  4803              LDR      r0,|L3.24|
00000a  f7fffffe          BL       kfifo_out
00000e  2800              CMP      r0,#0
000010  d0f8              BEQ      |L3.4|
;;;67     	return s;
000012  f89d0000          LDRB     r0,[sp,#0]
;;;68     }
000016  bd08              POP      {r3,pc}
;;;69     
                          ENDP

                  |L3.24|
                          DCD      pkfifo

                          AREA ||i.uart_init||, CODE, READONLY, ALIGN=2

                  uart_init PROC
;;;16     /*USART1: Tx -- PB9, Rx --- PB10 */
;;;17     void uart_init(unsigned int pclk2, unsigned int bound)
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;18     {  	 
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;19     	float temp;
;;;20         unsigned short mantissa;
;;;21     	unsigned short fraction;
;;;22     	
;;;23         RCC->APB2ENR        |= 1 << 2;   
000008  4843              LDR      r0,|L4.280|
00000a  6980              LDR      r0,[r0,#0x18]
00000c  f0400004          ORR      r0,r0,#4
000010  4941              LDR      r1,|L4.280|
000012  6188              STR      r0,[r1,#0x18]
;;;24     	RCC->APB2ENR        |= 1 << 14;  
000014  4608              MOV      r0,r1
000016  6980              LDR      r0,[r0,#0x18]
000018  f4404080          ORR      r0,r0,#0x4000
00001c  6188              STR      r0,[r1,#0x18]
;;;25     	GPIOA->CRH			&= 0XFFFFF00F;
00001e  483f              LDR      r0,|L4.284|
000020  6800              LDR      r0,[r0,#0]
000022  f420607f          BIC      r0,r0,#0xff0
000026  493d              LDR      r1,|L4.284|
000028  6008              STR      r0,[r1,#0]
;;;26     	GPIOA->CRH			|= 0X000008B0;
00002a  4608              MOV      r0,r1
00002c  6800              LDR      r0,[r0,#0]
00002e  f440600b          ORR      r0,r0,#0x8b0
000032  6008              STR      r0,[r1,#0]
;;;27     	RCC->APB2RSTR       |= 1 << 14;   
000034  4838              LDR      r0,|L4.280|
000036  68c0              LDR      r0,[r0,#0xc]
000038  f4404080          ORR      r0,r0,#0x4000
00003c  4936              LDR      r1,|L4.280|
00003e  60c8              STR      r0,[r1,#0xc]
;;;28     	RCC->APB2RSTR       &= ~(1<<14);  
000040  4608              MOV      r0,r1
000042  68c0              LDR      r0,[r0,#0xc]
000044  f4204080          BIC      r0,r0,#0x4000
000048  60c8              STR      r0,[r1,#0xc]
;;;29     
;;;30     	temp = (float)(pclk2*1000000)/(bound << 4);
00004a  0130              LSLS     r0,r6,#4
00004c  f7fffffe          BL       __aeabi_ui2f
000050  4680              MOV      r8,r0
000052  4933              LDR      r1,|L4.288|
000054  fb05f001          MUL      r0,r5,r1
000058  f7fffffe          BL       __aeabi_ui2f
00005c  4681              MOV      r9,r0
00005e  4641              MOV      r1,r8
000060  f7fffffe          BL       __aeabi_fdiv
000064  4607              MOV      r7,r0
;;;31     	mantissa = temp;				 
000066  4638              MOV      r0,r7
000068  f7fffffe          BL       __aeabi_f2uiz
00006c  b284              UXTH     r4,r0
;;;32     	fraction = (temp-mantissa)*16; 
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       __aeabi_ui2f
000074  4682              MOV      r10,r0
000076  4639              MOV      r1,r7
000078  f7fffffe          BL       __aeabi_frsub
00007c  4681              MOV      r9,r0
00007e  f04f4183          MOV      r1,#0x41800000
000082  f7fffffe          BL       __aeabi_fmul
000086  4680              MOV      r8,r0
000088  f7fffffe          BL       __aeabi_f2uiz
00008c  b280              UXTH     r0,r0
00008e  9001              STR      r0,[sp,#4]
;;;33         mantissa <<= 4;
000090  f64f70ff          MOV      r0,#0xffff
000094  ea001404          AND      r4,r0,r4,LSL #4
;;;34     	mantissa += fraction;  	   
000098  9801              LDR      r0,[sp,#4]
00009a  4420              ADD      r0,r0,r4
00009c  b284              UXTH     r4,r0
;;;35     
;;;36      	USART1->BRR          = mantissa;  
00009e  4821              LDR      r0,|L4.292|
0000a0  6004              STR      r4,[r0,#0]
;;;37     	USART1->CR1         |= 0X200C;
0000a2  1d00              ADDS     r0,r0,#4
0000a4  6800              LDR      r0,[r0,#0]
0000a6  f242010c          MOV      r1,#0x200c
0000aa  4308              ORRS     r0,r0,r1
0000ac  491d              LDR      r1,|L4.292|
0000ae  1d09              ADDS     r1,r1,#4
0000b0  6008              STR      r0,[r1,#0]
;;;38     		
;;;39     	USART1->CR1|=1<<5;   
0000b2  4608              MOV      r0,r1
0000b4  6800              LDR      r0,[r0,#0]
0000b6  f0400020          ORR      r0,r0,#0x20
0000ba  6008              STR      r0,[r1,#0]
;;;40     
;;;41     	NVIC_EnableIRQ(USART1_IRQn);
0000bc  f04f0825          MOV      r8,#0x25
0000c0  f1b80f00          CMP      r8,#0
0000c4  db03              BLT      |L4.206|
0000c6  4640              MOV      r0,r8
0000c8  f7fffffe          BL       __NVIC_EnableIRQ
0000cc  e000              B        |L4.208|
                  |L4.206|
0000ce  bf00              NOP      
                  |L4.208|
;;;42     
;;;43     	NVIC_SetPriority(USART1_IRQn, 14, 0);
0000d0  f04f0a25          MOV      r10,#0x25
0000d4  f04f080e          MOV      r8,#0xe
0000d8  f04f0900          MOV      r9,#0
0000dc  4812              LDR      r0,|L4.296|
0000de  6800              LDR      r0,[r0,#0]
0000e0  f3c02b02          UBFX     r11,r0,#8,#3
0000e4  f1b80f10          CMP      r8,#0x10
0000e8  d20d              BCS      |L4.262|
0000ea  f1b90f10          CMP      r9,#0x10
0000ee  d20a              BCS      |L4.262|
0000f0  464a              MOV      r2,r9
0000f2  4641              MOV      r1,r8
0000f4  4658              MOV      r0,r11
0000f6  f7fffffe          BL       __NVIC_EncodePriority
0000fa  9000              STR      r0,[sp,#0]
0000fc  4650              MOV      r0,r10
0000fe  9900              LDR      r1,[sp,#0]
000100  f7fffffe          BL       __NVIC_SetPriority
000104  e000              B        |L4.264|
                  |L4.262|
000106  bf00              NOP      
                  |L4.264|
;;;44     	
;;;45     	kfifo_init(&pkfifo, USART_RX_BUF, USART_REC_LEN);
000108  2301              MOVS     r3,#1
00010a  2280              MOVS     r2,#0x80
00010c  4907              LDR      r1,|L4.300|
00010e  4808              LDR      r0,|L4.304|
000110  f7fffffe          BL       __kfifo_init
;;;46     }
000114  e8bd9ffc          POP      {r2-r12,pc}
;;;47     
                          ENDP

                  |L4.280|
                          DCD      0x40021000
                  |L4.284|
                          DCD      0x40010804
                  |L4.288|
                          DCD      0x000f4240
                  |L4.292|
                          DCD      0x40013808
                  |L4.296|
                          DCD      0xe000ed0c
                  |L4.300|
                          DCD      USART_RX_BUF
                  |L4.304|
                          DCD      pkfifo

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  pkfifo
                          %        16
                  USART_RX_BUF
                          %        128

;*** Start embedded assembler ***

#line 1 "drivers\\UART\\usart_tranfer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_usart_tranfer_c_pkfifo____REV16|
#line 464 ".\\board\\Interrupt\\Nvic_armcc.h"
|__asm___15_usart_tranfer_c_pkfifo____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_usart_tranfer_c_pkfifo____REVSH|
#line 479
|__asm___15_usart_tranfer_c_pkfifo____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_usart_tranfer_c_pkfifo____RRX|
#line 666
|__asm___15_usart_tranfer_c_pkfifo____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
