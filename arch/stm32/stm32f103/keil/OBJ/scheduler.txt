; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\obj\scheduler.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\scheduler.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\kernel -I.\app -I.\drivers\UART -I.\board -I.\board\Exception\Systick -I.\board\Interrupt -I.\board\System_Init -I.\board\Exception\ErrorHandler -I.\board\Register -I..\..\..\..\lib\include -I.\board\Delay -I..\..\..\..\components\shell -I..\..\..\..\lib\include -I..\..\..\..\lib\list -I..\..\..\..\lib\ringbuffer -I.\drivers\LED -I..\..\..\..\board\arm\cortex-m3 -I..\..\..\..\..\ARM_OS -I.\RTE\_liyou -ID:\36Keil_5_MDK\install\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\36Keil_5_MDK\install\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DSTM32F10X_HD --omf_browse=.\obj\scheduler.crf ..\..\..\..\kernel\scheduler.c]
                          THUMB

                          AREA ||i.__get_highest_priority_task||, CODE, READONLY, ALIGN=2

                  __get_highest_priority_task PROC
;;;76     
;;;77     static struct ly_task* __get_highest_priority_task(unsigned int* group)
000000  b570              PUSH     {r4-r6,lr}
;;;78     {
000002  4604              MOV      r4,r0
;;;79         struct ly_task *highest_priority_task;
;;;80         unsigned int highest_ready_priority;
;;;81     
;;;82         highest_ready_priority = __rt_ffs(ly_thread_ready_priority_group) - 1;
000004  4806              LDR      r0,|L1.32|
000006  6800              LDR      r0,[r0,#0]  ; ly_thread_ready_priority_group
000008  f7fffffe          BL       __rt_ffs
00000c  1e45              SUBS     r5,r0,#1
;;;83         highest_priority_task = 
;;;84             list_entry(ly_thread_priority_table[highest_ready_priority].next, 
00000e  4a05              LDR      r2,|L1.36|
000010  f8521035          LDR      r1,[r2,r5,LSL #3]
000014  f1a10044          SUB      r0,r1,#0x44
000018  4606              MOV      r6,r0
;;;85             struct ly_task, tlist);
;;;86     
;;;87          *group = highest_ready_priority;
00001a  6025              STR      r5,[r4,#0]
;;;88     
;;;89         return highest_priority_task;
00001c  4630              MOV      r0,r6
;;;90     }
00001e  bd70              POP      {r4-r6,pc}
;;;91     
                          ENDP

                  |L1.32|
                          DCD      ly_thread_ready_priority_group
                  |L1.36|
                          DCD      ly_thread_priority_table

                          AREA ||i.__list_add||, CODE, READONLY, ALIGN=1

                  __list_add PROC
;;;20     
;;;21     static inline void __list_add(struct list_head *new,	
000000  6050              STR      r0,[r2,#4]
;;;22     				struct list_head *prev, struct list_head *next)
;;;23     {
;;;24     	next->prev = new;	
;;;25     	new->next = next;
000002  6002              STR      r2,[r0,#0]
;;;26     	new->prev = prev;
000004  6041              STR      r1,[r0,#4]
;;;27     	prev->next = new;
000006  6008              STR      r0,[r1,#0]
;;;28     }
000008  4770              BX       lr
;;;29     
                          ENDP


                          AREA ||i.__schedule_insert_thread||, CODE, READONLY, ALIGN=2

                  __schedule_insert_thread PROC
;;;28     
;;;29     void __schedule_insert_thread(struct ly_task *task)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;30     {
000004  4604              MOV      r4,r0
;;;31     	unsigned int level;
;;;32     
;;;33        	level = interrupt_disable();
000006  f7fffffe          BL       interrupt_disable
00000a  4607              MOV      r7,r0
;;;34     	
;;;35         if (task == ly_current_thread)
00000c  4822              LDR      r0,|L3.152|
00000e  6800              LDR      r0,[r0,#0]  ; ly_current_thread
000010  4284              CMP      r4,r0
000012  d108              BNE      |L3.38|
;;;36         {
;;;37             task->stat =LY_THREAD_RUNNING | (task->stat & ~LY_THREAD_STAT_MASK);
000014  7d20              LDRB     r0,[r4,#0x14]
000016  f0200007          BIC      r0,r0,#7
00001a  f0400003          ORR      r0,r0,#3
00001e  7520              STRB     r0,[r4,#0x14]
;;;38             interrupt_enable(level);
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       interrupt_enable
                  |L3.38|
;;;39         }
;;;40     
;;;41     	if((task->stat & LY_THREAD_STAT_MASK) == LY_THREAD_RUNNING)
000026  7d20              LDRB     r0,[r4,#0x14]
000028  f0000007          AND      r0,r0,#7
00002c  2803              CMP      r0,#3
00002e  d119              BNE      |L3.100|
;;;42     	{
;;;43     		if((task->stat & LY_THREAD_STAT_MASK) != 0)
000030  7d20              LDRB     r0,[r4,#0x14]
000032  f0000007          AND      r0,r0,#7
000036  b140              CBZ      r0,|L3.74|
;;;44     		{
;;;45     			list_add_before(&(task->tlist), &(ly_thread_priority_table[task->current_priority]));
000038  7d60              LDRB     r0,[r4,#0x15]
00003a  4a18              LDR      r2,|L3.156|
00003c  eb0201c0          ADD      r1,r2,r0,LSL #3
000040  f1040044          ADD      r0,r4,#0x44
000044  f7fffffe          BL       list_add_before
000048  e014              B        |L3.116|
                  |L3.74|
;;;46     		}
;;;47     		else
;;;48     		{
;;;49     			list_add_after(&(task->tlist), &(ly_thread_priority_table[task->current_priority]));
00004a  f1040644          ADD      r6,r4,#0x44
00004e  7d60              LDRB     r0,[r4,#0x15]
000050  4912              LDR      r1,|L3.156|
000052  eb0105c0          ADD      r5,r1,r0,LSL #3
000056  4629              MOV      r1,r5
000058  4630              MOV      r0,r6
00005a  682a              LDR      r2,[r5,#0]
00005c  f7fffffe          BL       __list_add
000060  bf00              NOP      
000062  e007              B        |L3.116|
                  |L3.100|
;;;50     		}
;;;51     	}
;;;52     	else
;;;53     	{
;;;54     		list_add_before(&(task->tlist), &(ly_thread_priority_table[task->current_priority]));
000064  7d60              LDRB     r0,[r4,#0x15]
000066  4a0d              LDR      r2,|L3.156|
000068  eb0201c0          ADD      r1,r2,r0,LSL #3
00006c  f1040044          ADD      r0,r4,#0x44
000070  f7fffffe          BL       list_add_before
                  |L3.116|
;;;55     	}
;;;56     
;;;57     	ly_thread_ready_priority_group |= task->number_mask;
000074  490a              LDR      r1,|L3.160|
000076  69e0              LDR      r0,[r4,#0x1c]
000078  6809              LDR      r1,[r1,#0]  ; ly_thread_ready_priority_group
00007a  4308              ORRS     r0,r0,r1
00007c  4908              LDR      r1,|L3.160|
00007e  6008              STR      r0,[r1,#0]  ; ly_thread_ready_priority_group
;;;58     	
;;;59     	task->stat = LY_THREAD_READY | (task->stat & ~LY_THREAD_STAT_MASK);
000080  7d20              LDRB     r0,[r4,#0x14]
000082  f0200007          BIC      r0,r0,#7
000086  f0400002          ORR      r0,r0,#2
00008a  7520              STRB     r0,[r4,#0x14]
;;;60     
;;;61     	interrupt_enable(level);
00008c  4638              MOV      r0,r7
00008e  f7fffffe          BL       interrupt_enable
;;;62     }
000092  e8bd81f0          POP      {r4-r8,pc}
;;;63     
                          ENDP

000096  0000              DCW      0x0000
                  |L3.152|
                          DCD      ly_current_thread
                  |L3.156|
                          DCD      ly_thread_priority_table
                  |L3.160|
                          DCD      ly_thread_ready_priority_group

                          AREA ||i.list_add_before||, CODE, READONLY, ALIGN=1

                  list_add_before PROC
;;;35     
;;;36     static inline void list_add_before(struct list_head *new, 
000000  b570              PUSH     {r4-r6,lr}
;;;37     				struct list_head *head)
;;;38     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;39     	__list_add(new, head->prev, head);
000006  4622              MOV      r2,r4
000008  4628              MOV      r0,r5
00000a  6861              LDR      r1,[r4,#4]
00000c  f7fffffe          BL       __list_add
;;;40     }
000010  bd70              POP      {r4-r6,pc}
;;;41     
                          ENDP


                          AREA ||i.ly_schedule||, CODE, READONLY, ALIGN=2

                  ly_schedule PROC
;;;107    
;;;108    void ly_schedule(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;109    {
;;;110        unsigned int level;
;;;111        unsigned int highest_ready_priority;
;;;112        struct ly_task *to_thread;
;;;113        struct ly_task *from_thread;
;;;114    
;;;115        level = interrupt_disable();
000002  f7fffffe          BL       interrupt_disable
000006  4606              MOV      r6,r0
;;;116    
;;;117        if (ly_thread_ready_priority_group != 0)
000008  4836              LDR      r0,|L5.228|
00000a  6800              LDR      r0,[r0,#0]  ; ly_thread_ready_priority_group
00000c  2800              CMP      r0,#0
00000e  d064              BEQ      |L5.218|
;;;118        {
;;;119            int need_insert_from_thread = 0;
000010  2700              MOVS     r7,#0
;;;120    
;;;121            to_thread = __get_highest_priority_task(&highest_ready_priority);
000012  4668              MOV      r0,sp
000014  f7fffffe          BL       __get_highest_priority_task
000018  4604              MOV      r4,r0
;;;122    
;;;123            if ((ly_current_thread->stat & LY_THREAD_STAT_MASK) == LY_THREAD_RUNNING)
00001a  4833              LDR      r0,|L5.232|
00001c  6800              LDR      r0,[r0,#0]  ; ly_current_thread
00001e  7d00              LDRB     r0,[r0,#0x14]
000020  f0000007          AND      r0,r0,#7
000024  2803              CMP      r0,#3
000026  d118              BNE      |L5.90|
;;;124            {
;;;125                if (ly_current_thread->current_priority < highest_ready_priority)
000028  482f              LDR      r0,|L5.232|
00002a  6800              LDR      r0,[r0,#0]  ; ly_current_thread
00002c  7d40              LDRB     r0,[r0,#0x15]
00002e  9900              LDR      r1,[sp,#0]
000030  4288              CMP      r0,r1
000032  d202              BCS      |L5.58|
;;;126                {
;;;127                    to_thread = ly_current_thread;
000034  482c              LDR      r0,|L5.232|
000036  6804              LDR      r4,[r0,#0]  ; ly_current_thread
000038  e00f              B        |L5.90|
                  |L5.58|
;;;128                }
;;;129                else if (ly_current_thread->current_priority == highest_ready_priority && 
00003a  482b              LDR      r0,|L5.232|
00003c  6800              LDR      r0,[r0,#0]  ; ly_current_thread
00003e  7d40              LDRB     r0,[r0,#0x15]
000040  9900              LDR      r1,[sp,#0]
000042  4288              CMP      r0,r1
000044  d108              BNE      |L5.88|
;;;130                        (ly_current_thread->stat & LY_THREAD_STAT_YIELD) == 0)
000046  4828              LDR      r0,|L5.232|
000048  6800              LDR      r0,[r0,#0]  ; ly_current_thread
00004a  7d00              LDRB     r0,[r0,#0x14]
00004c  f0000008          AND      r0,r0,#8
000050  b910              CBNZ     r0,|L5.88|
;;;131                {
;;;132                    to_thread = ly_current_thread;
000052  4825              LDR      r0,|L5.232|
000054  6804              LDR      r4,[r0,#0]  ; ly_current_thread
000056  e000              B        |L5.90|
                  |L5.88|
;;;133                }
;;;134                else
;;;135                {
;;;136                    need_insert_from_thread = 1;
000058  2701              MOVS     r7,#1
                  |L5.90|
;;;137                }
;;;138                
;;;139               // ly_current_thread->stat &= ~LY_THREAD_STAT_YIELD;
;;;140            }
;;;141    
;;;142            if (to_thread != ly_current_thread)
00005a  4823              LDR      r0,|L5.232|
00005c  6800              LDR      r0,[r0,#0]  ; ly_current_thread
00005e  4284              CMP      r4,r0
000060  d02c              BEQ      |L5.188|
;;;143            {
;;;144                ly_current_priority = highest_ready_priority;
000062  4922              LDR      r1,|L5.236|
000064  9800              LDR      r0,[sp,#0]
000066  6008              STR      r0,[r1,#0]  ; ly_current_priority
;;;145                from_thread         = ly_current_thread;
000068  481f              LDR      r0,|L5.232|
00006a  6805              LDR      r5,[r0,#0]  ; ly_current_thread
;;;146                ly_current_thread   = to_thread;
00006c  6004              STR      r4,[r0,#0]  ; ly_current_thread
;;;147    
;;;148                if (need_insert_from_thread)
00006e  b147              CBZ      r7,|L5.130|
;;;149                {
;;;150                    from_thread->stat = LY_THREAD_READY | (from_thread->stat & ~LY_THREAD_STAT_MASK);
000070  7d28              LDRB     r0,[r5,#0x14]
000072  f0200007          BIC      r0,r0,#7
000076  f0400002          ORR      r0,r0,#2
00007a  7528              STRB     r0,[r5,#0x14]
;;;151                    __schedule_insert_thread(from_thread);
00007c  4628              MOV      r0,r5
00007e  f7fffffe          BL       __schedule_insert_thread
                  |L5.130|
;;;152                }
;;;153    
;;;154                ly_remove_ready_task(to_thread);
000082  4620              MOV      r0,r4
000084  f7fffffe          BL       ly_remove_ready_task
;;;155                to_thread->stat = LY_THREAD_RUNNING | (to_thread->stat & ~LY_THREAD_STAT_MASK);
000088  7d20              LDRB     r0,[r4,#0x14]
00008a  f0200007          BIC      r0,r0,#7
00008e  f0400003          ORR      r0,r0,#3
000092  7520              STRB     r0,[r4,#0x14]
;;;156    
;;;157                
;;;158                if (ly_interrupt_nest == 0)
000094  4816              LDR      r0,|L5.240|
000096  6800              LDR      r0,[r0,#0]  ; ly_interrupt_nest
000098  b930              CBNZ     r0,|L5.168|
;;;159                {
;;;160                    ly_context_switch((unsigned int)&from_thread->sp, (unsigned int)&to_thread->sp);
00009a  4621              MOV      r1,r4
00009c  4628              MOV      r0,r5
00009e  f7fffffe          BL       ly_context_switch
;;;161    
;;;162                    interrupt_enable(level);
0000a2  4630              MOV      r0,r6
0000a4  f7fffffe          BL       interrupt_enable
                  |L5.168|
;;;163                }
;;;164    
;;;165                if (ly_interrupt_nest != 0)
0000a8  4811              LDR      r0,|L5.240|
0000aa  6800              LDR      r0,[r0,#0]  ; ly_interrupt_nest
0000ac  b1a0              CBZ      r0,|L5.216|
;;;166                {
;;;167                    ly_context_switch_interrupt((unsigned int)&from_thread->sp,
0000ae  4623              MOV      r3,r4
0000b0  462a              MOV      r2,r5
0000b2  4621              MOV      r1,r4
0000b4  4628              MOV      r0,r5
0000b6  f7fffffe          BL       ly_context_switch_interrupt
0000ba  e00d              B        |L5.216|
                  |L5.188|
;;;168                                (unsigned int)&to_thread->sp, from_thread, to_thread);
;;;169                }                   
;;;170            }  
;;;171            else
;;;172            {
;;;173                ly_remove_ready_task(ly_current_thread);
0000bc  480a              LDR      r0,|L5.232|
0000be  6800              LDR      r0,[r0,#0]  ; ly_current_thread
0000c0  f7fffffe          BL       ly_remove_ready_task
;;;174                ly_current_thread->stat = 
0000c4  4808              LDR      r0,|L5.232|
0000c6  6800              LDR      r0,[r0,#0]  ; ly_current_thread
0000c8  7d00              LDRB     r0,[r0,#0x14]
0000ca  f0200007          BIC      r0,r0,#7
0000ce  f0400003          ORR      r0,r0,#3
0000d2  4905              LDR      r1,|L5.232|
0000d4  6809              LDR      r1,[r1,#0]  ; ly_current_thread
0000d6  7508              STRB     r0,[r1,#0x14]
                  |L5.216|
;;;175                LY_THREAD_RUNNING | (ly_current_thread->stat & ~LY_THREAD_STAT_MASK);
;;;176            }
;;;177        }
0000d8  bf00              NOP      
                  |L5.218|
;;;178    
;;;179        interrupt_enable(level);
0000da  4630              MOV      r0,r6
0000dc  f7fffffe          BL       interrupt_enable
;;;180    }
0000e0  bdf8              POP      {r3-r7,pc}
;;;181    
                          ENDP

0000e2  0000              DCW      0x0000
                  |L5.228|
                          DCD      ly_thread_ready_priority_group
                  |L5.232|
                          DCD      ly_current_thread
                  |L5.236|
                          DCD      ly_current_priority
                  |L5.240|
                          DCD      ly_interrupt_nest

                          AREA ||i.system_scheduler_init||, CODE, READONLY, ALIGN=2

                  system_scheduler_init PROC
;;;16     
;;;17     void system_scheduler_init(void)
000000  2000              MOVS     r0,#0
;;;18     {
;;;19     	unsigned long offset;
;;;20     
;;;21     	for (offset = 0; offset < LY_THREAD_PRIORITY_MAX; offset ++)
000002  4601              MOV      r1,r0
000004  e007              B        |L6.22|
                  |L6.6|
;;;22         {
;;;23             list_init(&ly_thread_priority_table[offset]);
000006  4a07              LDR      r2,|L6.36|
000008  eb0200c1          ADD      r0,r2,r1,LSL #3
00000c  6000              STR      r0,[r0,#0]
00000e  6040              STR      r0,[r0,#4]
000010  bf00              NOP      
000012  1c48              ADDS     r0,r1,#1              ;21
000014  4601              MOV      r1,r0                 ;21
                  |L6.22|
000016  2920              CMP      r1,#0x20              ;21
000018  d3f5              BCC      |L6.6|
;;;24         }
;;;25     
;;;26         ly_thread_ready_priority_group = 0;
00001a  2000              MOVS     r0,#0
00001c  4a02              LDR      r2,|L6.40|
00001e  6010              STR      r0,[r2,#0]  ; ly_thread_ready_priority_group
;;;27     }
000020  4770              BX       lr
;;;28     
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      ly_thread_priority_table
                  |L6.40|
                          DCD      ly_thread_ready_priority_group

                          AREA ||i.system_scheduler_start||, CODE, READONLY, ALIGN=2

                  system_scheduler_start PROC
;;;91     
;;;92     void system_scheduler_start()
000000  b538              PUSH     {r3-r5,lr}
;;;93     {
;;;94         struct ly_task *highest_priority_task;
;;;95     	unsigned int highest_ready_priority;
;;;96     
;;;97         highest_priority_task = __get_highest_priority_task(&highest_ready_priority);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       __get_highest_priority_task
000008  4604              MOV      r4,r0
;;;98     
;;;99         ly_current_thread = highest_priority_task;
00000a  4805              LDR      r0,|L7.32|
00000c  6004              STR      r4,[r0,#0]  ; ly_current_thread
;;;100    
;;;101        ly_remove_ready_task(highest_priority_task);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       ly_remove_ready_task
;;;102    
;;;103        highest_priority_task->stat = LY_THREAD_RUNNING;
000014  2003              MOVS     r0,#3
000016  7520              STRB     r0,[r4,#0x14]
;;;104    
;;;105        ly_context_switch_to((unsigned int)&highest_priority_task->sp);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       ly_context_switch_to
;;;106    }
00001e  bd38              POP      {r3-r5,pc}
;;;107    
                          ENDP

                  |L7.32|
                          DCD      ly_current_thread

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ly_thread_priority_table
                          %        256

                          AREA ||.data||, DATA, ALIGN=2

                  ly_thread_ready_priority_group
                          DCD      0x00000000
                  ly_current_priority
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\kernel\\scheduler.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__rt_ffs|
#line 64
|__rt_ffs| PROC
#line 65

 CMP r0, #0x00
 BEQ exit

 RBIT r0, r0
 CLZ r0, r0
 ADDS r0, r0, #0x01

exit
 BX lr
	ENDP

;*** End   embedded assembler ***
