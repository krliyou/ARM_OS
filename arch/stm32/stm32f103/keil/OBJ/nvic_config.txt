; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\obj\nvic_config.o --asm_dir=.\OBJ\ --list_dir=.\OBJ\ --depend=.\obj\nvic_config.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\kernel -I.\app -I.\drivers\UART -I.\board -I.\board\Exception\Systick -I.\board\Interrupt -I.\board\System_Init -I.\board\Exception\ErrorHandler -I.\board\Register -I..\..\..\..\lib\include -I.\board\Delay -I..\..\..\..\components\shell -I..\..\..\..\lib\include -I..\..\..\..\lib\list -I..\..\..\..\lib\ringbuffer -I.\drivers\LED -I..\..\..\..\board\arm\cortex-m3 -I..\..\..\..\..\ARM_OS -I.\RTE\_liyou -ID:\36Keil_5_MDK\install\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\36Keil_5_MDK\install\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DSTM32F10X_HD --omf_browse=.\obj\nvic_config.crf board\Interrupt\Nvic_config.c]
                          THUMB

                          AREA ||i.__NVIC_ClearPendingIRQ||, CODE, READONLY, ALIGN=2

                  __NVIC_ClearPendingIRQ PROC
;;;215     */
;;;216    void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;217    {
;;;218    	NVIC->ICPR[(((unsigned int)IRQn) >> 5UL)] = \
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a02              LDR      r2,|L1.20|
00000a  0943              LSRS     r3,r0,#5
00000c  f8421023          STR      r1,[r2,r3,LSL #2]
;;;219    		(unsigned int)(1UL << (((unsigned int)IRQn) & 0x1FUL));
;;;220    }
000010  4770              BX       lr
;;;221    
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      0xe000e280

                          AREA ||i.__NVIC_DecodePriority||, CODE, READONLY, ALIGN=1

                  __NVIC_DecodePriority PROC
;;;158     */
;;;159    void __NVIC_DecodePriority 	
000000  b5f0              PUSH     {r4-r7,lr}
;;;160    		(unsigned int Priority, unsigned int PriorityGroup,
;;;161    		unsigned int* const pPreemptPriority, unsigned int* const pSubPriority)
;;;162    {
000002  4604              MOV      r4,r0
;;;163    	unsigned int PriorityGroupTmp = (PriorityGroup & (unsigned int)0x07UL);  
000004  f0010007          AND      r0,r1,#7
;;;164    	unsigned int PreemptPriorityBits;
;;;165    	unsigned int SubPriorityBits;
;;;166    
;;;167    	PreemptPriorityBits = \
000008  f1c00707          RSB      r7,r0,#7
00000c  2f04              CMP      r7,#4
00000e  d901              BLS      |L2.20|
;;;168    		((7UL - PriorityGroupTmp) > (unsigned int)(__NVIC_PRIO_BITS)) ? \
;;;169    		(unsigned int)(__NVIC_PRIO_BITS) : (unsigned int)(7UL - PriorityGroupTmp);
000010  2704              MOVS     r7,#4
000012  e001              B        |L2.24|
                  |L2.20|
000014  f1c00707          RSB      r7,r0,#7
                  |L2.24|
000018  463e              MOV      r6,r7
;;;170      
;;;171      	SubPriorityBits     = \
00001a  1d07              ADDS     r7,r0,#4
00001c  2f07              CMP      r7,#7
00001e  d201              BCS      |L2.36|
;;;172      		((PriorityGroupTmp + (unsigned int)(__NVIC_PRIO_BITS)) < \
;;;173    		(unsigned int)7UL) ? (unsigned int)0UL : (unsigned int)((PriorityGroupTmp - 7UL) + \
000020  2700              MOVS     r7,#0
000022  e000              B        |L2.38|
                  |L2.36|
000024  1ec7              SUBS     r7,r0,#3
                  |L2.38|
000026  463d              MOV      r5,r7
;;;174    		(unsigned int)(__NVIC_PRIO_BITS));
;;;175    
;;;176    	*pPreemptPriority = \
000028  fa24f705          LSR      r7,r4,r5
00002c  f04f0c01          MOV      r12,#1
000030  fa0cfc06          LSL      r12,r12,r6
000034  f1ac0c01          SUB      r12,r12,#1
000038  ea07070c          AND      r7,r7,r12
00003c  6017              STR      r7,[r2,#0]
;;;177    		(Priority >> SubPriorityBits) & \
;;;178    		(unsigned int)((1UL << (PreemptPriorityBits)) - 1UL);
;;;179      
;;;180    	*pSubPriority     = \
00003e  2701              MOVS     r7,#1
000040  40af              LSLS     r7,r7,r5
000042  1e7f              SUBS     r7,r7,#1
000044  4027              ANDS     r7,r7,r4
000046  601f              STR      r7,[r3,#0]
;;;181    		(Priority) & (unsigned int)((1UL << (SubPriorityBits)) - 1UL);
;;;182    }
000048  bdf0              POP      {r4-r7,pc}
;;;183    
                          ENDP


                          AREA ||i.__NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

                  __NVIC_DisableIRQ PROC
;;;53      */
;;;54     void __NVIC_DisableIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;55     {
;;;56     	NVIC->ICER[(((unsigned int)IRQn) >> 5UL)] = \
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a0a              LDR      r2,|L3.52|
00000a  0943              LSRS     r3,r0,#5
00000c  f8421023          STR      r1,[r2,r3,LSL #2]
;;;57     		(unsigned int)(1UL << (((unsigned int)IRQn) & 0x1FUL));
;;;58         __DSB();
000010  bf00              NOP      
000012  bf00              NOP      
000014  bf00              NOP      
000016  f3bf8f4f          DSB      
00001a  bf00              NOP      
00001c  bf00              NOP      
00001e  bf00              NOP      
;;;59         __ISB();
000020  bf00              NOP      
000022  bf00              NOP      
000024  bf00              NOP      
000026  f3bf8f6f          ISB      
00002a  bf00              NOP      
00002c  bf00              NOP      
00002e  bf00              NOP      
;;;60     }
000030  4770              BX       lr
;;;61     
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0xe000e180

                          AREA ||i.__NVIC_EnableIRQ||, CODE, READONLY, ALIGN=1

                  __NVIC_EnableIRQ PROC
;;;67      */
;;;68     void __NVIC_EnableIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;69     {
;;;70     	NVIC->ISER[(((unsigned int)IRQn) >> 5UL)] = \
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  0942              LSRS     r2,r0,#5
00000a  0092              LSLS     r2,r2,#2
00000c  f10222e0          ADD      r2,r2,#0xe000e000
000010  f8c21100          STR      r1,[r2,#0x100]
;;;71         (unsigned int)(1UL << (((unsigned int)IRQn) & 0x1FUL));
;;;72     }
000014  4770              BX       lr
;;;73     
                          ENDP


                          AREA ||i.__NVIC_EncodePriority||, CODE, READONLY, ALIGN=1

                  __NVIC_EncodePriority PROC
;;;21      */
;;;22     unsigned int __NVIC_EncodePriority(unsigned int PriorityGroup,
000000  b5f0              PUSH     {r4-r7,lr}
;;;23     		unsigned int PreemptPriority, unsigned int SubPriority)
;;;24     {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;25         unsigned int PriorityGroupTmp = \
000006  f0030107          AND      r1,r3,#7
;;;26         (PriorityGroup & (unsigned int)0x07UL);   /* only values 0..7 are used          */
;;;27         unsigned int PreemptPriorityBits;
;;;28         unsigned int SubPriorityBits;
;;;29     
;;;30         PreemptPriorityBits = \
00000a  f1c10007          RSB      r0,r1,#7
00000e  2804              CMP      r0,#4
000010  d901              BLS      |L5.22|
;;;31         ((7UL - PriorityGroupTmp) > \
;;;32         (unsigned int)(__NVIC_PRIO_BITS)) ? \
;;;33         (unsigned int)(__NVIC_PRIO_BITS) :  \
000012  2004              MOVS     r0,#4
000014  e001              B        |L5.26|
                  |L5.22|
;;;34         (unsigned int)(7UL - PriorityGroupTmp);    
000016  f1c10007          RSB      r0,r1,#7
                  |L5.26|
00001a  4606              MOV      r6,r0
;;;35         
;;;36         SubPriorityBits =   \
00001c  1d08              ADDS     r0,r1,#4
00001e  2807              CMP      r0,#7
000020  d201              BCS      |L5.38|
;;;37         ((PriorityGroupTmp + (unsigned int)(__NVIC_PRIO_BITS)) <    \
;;;38         (unsigned int)7UL) ? (unsigned int)0UL :    \
000022  2000              MOVS     r0,#0
000024  e000              B        |L5.40|
                  |L5.38|
;;;39         (unsigned int)((PriorityGroupTmp - 7UL) +   \
000026  1ec8              SUBS     r0,r1,#3
                  |L5.40|
000028  4605              MOV      r5,r0
;;;40         (unsigned int)(__NVIC_PRIO_BITS));
;;;41     
;;;42         return 
00002a  2001              MOVS     r0,#1
00002c  40b0              LSLS     r0,r0,r6
00002e  1e40              SUBS     r0,r0,#1
000030  4020              ANDS     r0,r0,r4
000032  40a8              LSLS     r0,r0,r5
000034  2701              MOVS     r7,#1
000036  40af              LSLS     r7,r7,r5
000038  1e7f              SUBS     r7,r7,#1
00003a  4017              ANDS     r7,r7,r2
00003c  4338              ORRS     r0,r0,r7
;;;43         (((PreemptPriority & (unsigned int) \
;;;44         ((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) | \
;;;45         ((SubPriority & (unsigned int)((1UL << (SubPriorityBits)) - 1UL))));
;;;46     }
00003e  bdf0              POP      {r4-r7,pc}
;;;47     
                          ENDP


                          AREA ||i.__NVIC_GetActive||, CODE, READONLY, ALIGN=2

                  __NVIC_GetActive PROC
;;;229     */
;;;230    unsigned int __NVIC_GetActive(IRQn_Type IRQn)
000000  4601              MOV      r1,r0
;;;231    {
;;;232    	return((unsigned int)(((NVIC->IABR[(((unsigned int)IRQn) >> 5UL)] & \
000002  4807              LDR      r0,|L6.32|
000004  094a              LSRS     r2,r1,#5
000006  f8500022          LDR      r0,[r0,r2,LSL #2]
00000a  f001031f          AND      r3,r1,#0x1f
00000e  2201              MOVS     r2,#1
000010  409a              LSLS     r2,r2,r3
000012  4010              ANDS     r0,r0,r2
000014  b108              CBZ      r0,|L6.26|
;;;233    		(1UL << (((unsigned int)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
000016  2001              MOVS     r0,#1
                  |L6.24|
;;;234    }
000018  4770              BX       lr
                  |L6.26|
00001a  2000              MOVS     r0,#0                 ;233
00001c  e7fc              B        |L6.24|
;;;235    
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      0xe000e300

                          AREA ||i.__NVIC_GetPendingIRQ||, CODE, READONLY, ALIGN=2

                  __NVIC_GetPendingIRQ PROC
;;;203     */
;;;204    unsigned int __NVIC_GetPendingIRQ(IRQn_Type IRQn)
000000  4601              MOV      r1,r0
;;;205    {
;;;206        return ((unsigned int)(((NVIC->ISPR[(((unsigned int)IRQn) >> 5UL)] & \
000002  4807              LDR      r0,|L7.32|
000004  094a              LSRS     r2,r1,#5
000006  f8500022          LDR      r0,[r0,r2,LSL #2]
00000a  f001031f          AND      r3,r1,#0x1f
00000e  2201              MOVS     r2,#1
000010  409a              LSLS     r2,r2,r3
000012  4010              ANDS     r0,r0,r2
000014  b108              CBZ      r0,|L7.26|
;;;207    		(1UL << (((unsigned int)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
000016  2001              MOVS     r0,#1
                  |L7.24|
;;;208    }
000018  4770              BX       lr
                  |L7.26|
00001a  2000              MOVS     r0,#0                 ;207
00001c  e7fc              B        |L7.24|
;;;209    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      0xe000e200

                          AREA ||i.__NVIC_SetPendingIRQ||, CODE, READONLY, ALIGN=2

                  __NVIC_SetPendingIRQ PROC
;;;189     */
;;;190    void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;191    {
;;;192    	NVIC->ISPR[(((unsigned int)IRQn) >> 5UL)] = \
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  4a02              LDR      r2,|L8.20|
00000a  0943              LSRS     r3,r0,#5
00000c  f8421023          STR      r1,[r2,r3,LSL #2]
;;;193    		(unsigned int)(1UL << (((unsigned int)IRQn) & 0x1FUL));
;;;194    }
000010  4770              BX       lr
;;;195    
                          ENDP

000012  0000              DCW      0x0000
                  |L8.20|
                          DCD      0xe000e200

                          AREA ||i.__NVIC_SetPriority||, CODE, READONLY, ALIGN=2

                  __NVIC_SetPriority PROC
;;;82      */
;;;83     void __NVIC_SetPriority(IRQn_Type IRQn, unsigned int priority)
000000  b510              PUSH     {r4,lr}
;;;84     {
;;;85     	if ((int32_t)(IRQn) < 0)
000002  2800              CMP      r0,#0
000004  da06              BGE      |L9.20|
;;;86         	SCB->SHP[(((unsigned int)IRQn) & 0xFUL)-4UL] = \
000006  070a              LSLS     r2,r1,#28
000008  0e14              LSRS     r4,r2,#24
00000a  4a05              LDR      r2,|L9.32|
00000c  f000030f          AND      r3,r0,#0xf
000010  1f1b              SUBS     r3,r3,#4
000012  54d4              STRB     r4,[r2,r3]
                  |L9.20|
;;;87     		(unsigned char)((priority << (8U - __NVIC_PRIO_BITS)) & (unsigned int)0xFFUL);
;;;88       
;;;89       	NVIC->IP[((unsigned int)IRQn)] = \
000014  070a              LSLS     r2,r1,#28
000016  0e13              LSRS     r3,r2,#24
000018  4a02              LDR      r2,|L9.36|
00001a  5413              STRB     r3,[r2,r0]
;;;90     			(unsigned char)((priority << (8U - __NVIC_PRIO_BITS)) & (unsigned int)0xFFUL);
;;;91     }
00001c  bd10              POP      {r4,pc}
;;;92     
                          ENDP

00001e  0000              DCW      0x0000
                  |L9.32|
                          DCD      0xe000ed18
                  |L9.36|
                          DCD      0xe000e400

                          AREA ||i.__NVIC_SetPriorityGrouping||, CODE, READONLY, ALIGN=2

                  __NVIC_SetPriorityGrouping PROC
;;;132    
;;;133    void __NVIC_SetPriorityGrouping(unsigned int PriorityGroup)
000000  4601              MOV      r1,r0
;;;134    {
;;;135    	uint32_t reg_value;
;;;136      	uint32_t PriorityGroupTmp = \
000002  2307              MOVS     r3,#7
000004  ea230201          BIC      r2,r3,r1
;;;137        	(~PriorityGroup & (uint32_t)0x07UL);          
;;;138    
;;;139      	reg_value	=	SCB->AIRCR;                                                   
000008  4b05              LDR      r3,|L10.32|
00000a  6818              LDR      r0,[r3,#0]
;;;140      	reg_value	&=	~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));          
00000c  f64f03ff          MOV      r3,#0xf8ff
000010  4018              ANDS     r0,r0,r3
;;;141      	reg_value   =	(reg_value | \
000012  4b04              LDR      r3,|L10.36|
000014  4303              ORRS     r3,r3,r0
000016  ea432002          ORR      r0,r3,r2,LSL #8
;;;142    					((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
;;;143    					(PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );      
;;;144    				         
;;;145    	SCB->AIRCR  =  reg_value;
00001a  4b01              LDR      r3,|L10.32|
00001c  6018              STR      r0,[r3,#0]
;;;146    }
00001e  4770              BX       lr
;;;147    
                          ENDP

                  |L10.32|
                          DCD      0xe000ed0c
                  |L10.36|
                          DCD      0x05fa0000

                          AREA ||i.__T_NVIC_GetPriority||, CODE, READONLY, ALIGN=2

                  __T_NVIC_GetPriority PROC
;;;101     */
;;;102    unsigned int __T_NVIC_GetPriority(IRQn_Type IRQn)
000000  4601              MOV      r1,r0
;;;103    {
;;;104    	if ((int32_t)(IRQn) < 0)
000002  2900              CMP      r1,#0
000004  da06              BGE      |L11.20|
;;;105    		return (((unsigned int)SCB->SHP[(((unsigned int)IRQn) & 0xFUL)-4UL] >> 	\
000006  4805              LDR      r0,|L11.28|
000008  f001020f          AND      r2,r1,#0xf
00000c  1f12              SUBS     r2,r2,#4
00000e  5c80              LDRB     r0,[r0,r2]
000010  0900              LSRS     r0,r0,#4
                  |L11.18|
;;;106    			(8U - __NVIC_PRIO_BITS)));
;;;107      
;;;108        return(((unsigned int)NVIC->IP[((unsigned int)IRQn)] >> \
;;;109    		(8U - __NVIC_PRIO_BITS)));
;;;110    }
000012  4770              BX       lr
                  |L11.20|
000014  4802              LDR      r0,|L11.32|
000016  5c40              LDRB     r0,[r0,r1]            ;108
000018  0900              LSRS     r0,r0,#4              ;108
00001a  e7fa              B        |L11.18|
;;;111    
                          ENDP

                  |L11.28|
                          DCD      0xe000ed18
                  |L11.32|
                          DCD      0xe000e400

;*** Start embedded assembler ***

#line 1 "board\\Interrupt\\Nvic_config.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_Nvic_config_c_242012ea____REV16|
#line 464 "board\\Interrupt\\Nvic_armcc.h"
|__asm___13_Nvic_config_c_242012ea____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_Nvic_config_c_242012ea____REVSH|
#line 479
|__asm___13_Nvic_config_c_242012ea____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_Nvic_config_c_242012ea____RRX|
#line 666
|__asm___13_Nvic_config_c_242012ea____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
